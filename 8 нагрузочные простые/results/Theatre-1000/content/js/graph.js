/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 127.0, "minX": 0.0, "maxY": 99694.0, "series": [{"data": [[0.0, 3795.0], [0.1, 3795.0], [0.2, 3907.0], [0.3, 3907.0], [0.4, 4509.0], [0.5, 4543.0], [0.6, 4543.0], [0.7, 5178.0], [0.8, 7062.0], [0.9, 7062.0], [1.0, 12108.0], [1.1, 13207.0], [1.2, 13207.0], [1.3, 15551.0], [1.4, 18689.0], [1.5, 18689.0], [1.6, 21030.0], [1.7, 21036.0], [1.8, 21036.0], [1.9, 21037.0], [2.0, 21037.0], [2.1, 21037.0], [2.2, 21037.0], [2.3, 21038.0], [2.4, 21038.0], [2.5, 21039.0], [2.6, 21039.0], [2.7, 21039.0], [2.8, 21039.0], [2.9, 21039.0], [3.0, 21039.0], [3.1, 21039.0], [3.2, 21040.0], [3.3, 21040.0], [3.4, 21040.0], [3.5, 21041.0], [3.6, 21041.0], [3.7, 21041.0], [3.8, 21041.0], [3.9, 21041.0], [4.0, 21041.0], [4.1, 21042.0], [4.2, 21042.0], [4.3, 21042.0], [4.4, 21042.0], [4.5, 21042.0], [4.6, 21043.0], [4.7, 21043.0], [4.8, 21043.0], [4.9, 21044.0], [5.0, 21044.0], [5.1, 21044.0], [5.2, 21044.0], [5.3, 21044.0], [5.4, 21044.0], [5.5, 21044.0], [5.6, 21044.0], [5.7, 21045.0], [5.8, 21045.0], [5.9, 21045.0], [6.0, 21045.0], [6.1, 21045.0], [6.2, 21045.0], [6.3, 21045.0], [6.4, 21046.0], [6.5, 21046.0], [6.6, 21046.0], [6.7, 21046.0], [6.8, 21046.0], [6.9, 21046.0], [7.0, 21046.0], [7.1, 21046.0], [7.2, 21046.0], [7.3, 21046.0], [7.4, 21046.0], [7.5, 21046.0], [7.6, 21046.0], [7.7, 21046.0], [7.8, 21046.0], [7.9, 21047.0], [8.0, 21047.0], [8.1, 21047.0], [8.2, 21047.0], [8.3, 21047.0], [8.4, 21047.0], [8.5, 21047.0], [8.6, 21047.0], [8.7, 21048.0], [8.8, 21048.0], [8.9, 21048.0], [9.0, 21048.0], [9.1, 21048.0], [9.2, 21048.0], [9.3, 21048.0], [9.4, 21048.0], [9.5, 21048.0], [9.6, 21048.0], [9.7, 21048.0], [9.8, 21048.0], [9.9, 21048.0], [10.0, 21048.0], [10.1, 21048.0], [10.2, 21048.0], [10.3, 21048.0], [10.4, 21048.0], [10.5, 21048.0], [10.6, 21048.0], [10.7, 21049.0], [10.8, 21049.0], [10.9, 21049.0], [11.0, 21049.0], [11.1, 21049.0], [11.2, 21049.0], [11.3, 21049.0], [11.4, 21049.0], [11.5, 21049.0], [11.6, 21049.0], [11.7, 21049.0], [11.8, 21049.0], [11.9, 21049.0], [12.0, 21049.0], [12.1, 21049.0], [12.2, 21049.0], [12.3, 21050.0], [12.4, 21050.0], [12.5, 21050.0], [12.6, 21050.0], [12.7, 21050.0], [12.8, 21050.0], [12.9, 21050.0], [13.0, 21050.0], [13.1, 21050.0], [13.2, 21050.0], [13.3, 21050.0], [13.4, 21050.0], [13.5, 21050.0], [13.6, 21050.0], [13.7, 21050.0], [13.8, 21050.0], [13.9, 21050.0], [14.0, 21051.0], [14.1, 21051.0], [14.2, 21051.0], [14.3, 21051.0], [14.4, 21051.0], [14.5, 21051.0], [14.6, 21051.0], [14.7, 21051.0], [14.8, 21051.0], [14.9, 21051.0], [15.0, 21051.0], [15.1, 21051.0], [15.2, 21051.0], [15.3, 21051.0], [15.4, 21051.0], [15.5, 21051.0], [15.6, 21051.0], [15.7, 21051.0], [15.8, 21051.0], [15.9, 21051.0], [16.0, 21051.0], [16.1, 21052.0], [16.2, 21052.0], [16.3, 21052.0], [16.4, 21052.0], [16.5, 21052.0], [16.6, 21052.0], [16.7, 21052.0], [16.8, 21052.0], [16.9, 21052.0], [17.0, 21052.0], [17.1, 21052.0], [17.2, 21053.0], [17.3, 21053.0], [17.4, 21053.0], [17.5, 21053.0], [17.6, 21053.0], [17.7, 21053.0], [17.8, 21053.0], [17.9, 21053.0], [18.0, 21053.0], [18.1, 21053.0], [18.2, 21053.0], [18.3, 21053.0], [18.4, 21054.0], [18.5, 21054.0], [18.6, 21055.0], [18.7, 21056.0], [18.8, 21056.0], [18.9, 21057.0], [19.0, 21058.0], [19.1, 21058.0], [19.2, 21059.0], [19.3, 21060.0], [19.4, 21060.0], [19.5, 21061.0], [19.6, 21061.0], [19.7, 21061.0], [19.8, 21061.0], [19.9, 21062.0], [20.0, 21062.0], [20.1, 21063.0], [20.2, 21063.0], [20.3, 21063.0], [20.4, 21064.0], [20.5, 21064.0], [20.6, 21064.0], [20.7, 21064.0], [20.8, 21064.0], [20.9, 21064.0], [21.0, 21066.0], [21.1, 21066.0], [21.2, 21066.0], [21.3, 21066.0], [21.4, 21066.0], [21.5, 21066.0], [21.6, 21068.0], [21.7, 21068.0], [21.8, 21068.0], [21.9, 21069.0], [22.0, 21069.0], [22.1, 21071.0], [22.2, 21072.0], [22.3, 21072.0], [22.4, 21073.0], [22.5, 21074.0], [22.6, 21074.0], [22.7, 21075.0], [22.8, 21075.0], [22.9, 21075.0], [23.0, 21075.0], [23.1, 21076.0], [23.2, 21076.0], [23.3, 21076.0], [23.4, 21076.0], [23.5, 21076.0], [23.6, 21076.0], [23.7, 21077.0], [23.8, 21077.0], [23.9, 21078.0], [24.0, 21078.0], [24.1, 21078.0], [24.2, 21079.0], [24.3, 21080.0], [24.4, 21080.0], [24.5, 21080.0], [24.6, 21081.0], [24.7, 21081.0], [24.8, 21082.0], [24.9, 21082.0], [25.0, 21082.0], [25.1, 21082.0], [25.2, 21082.0], [25.3, 21082.0], [25.4, 21082.0], [25.5, 21083.0], [25.6, 21083.0], [25.7, 21084.0], [25.8, 21084.0], [25.9, 21084.0], [26.0, 21084.0], [26.1, 21084.0], [26.2, 21084.0], [26.3, 21085.0], [26.4, 21085.0], [26.5, 21085.0], [26.6, 21086.0], [26.7, 21086.0], [26.8, 21086.0], [26.9, 21086.0], [27.0, 21086.0], [27.1, 21087.0], [27.2, 21087.0], [27.3, 21087.0], [27.4, 21087.0], [27.5, 21088.0], [27.6, 21088.0], [27.7, 21088.0], [27.8, 21088.0], [27.9, 21088.0], [28.0, 21088.0], [28.1, 21088.0], [28.2, 21088.0], [28.3, 21088.0], [28.4, 21088.0], [28.5, 21088.0], [28.6, 21089.0], [28.7, 21089.0], [28.8, 21089.0], [28.9, 21089.0], [29.0, 21089.0], [29.1, 21089.0], [29.2, 21090.0], [29.3, 21090.0], [29.4, 21090.0], [29.5, 21091.0], [29.6, 21091.0], [29.7, 21091.0], [29.8, 21092.0], [29.9, 21092.0], [30.0, 21092.0], [30.1, 21094.0], [30.2, 21094.0], [30.3, 21094.0], [30.4, 21094.0], [30.5, 21094.0], [30.6, 21095.0], [30.7, 21096.0], [30.8, 21096.0], [30.9, 21096.0], [31.0, 21096.0], [31.1, 21096.0], [31.2, 21097.0], [31.3, 21097.0], [31.4, 21097.0], [31.5, 21099.0], [31.6, 21100.0], [31.7, 21100.0], [31.8, 21103.0], [31.9, 21104.0], [32.0, 21104.0], [32.1, 21105.0], [32.2, 21105.0], [32.3, 21105.0], [32.4, 21106.0], [32.5, 21106.0], [32.6, 21106.0], [32.7, 21106.0], [32.8, 21107.0], [32.9, 21107.0], [33.0, 21108.0], [33.1, 21110.0], [33.2, 21110.0], [33.3, 21112.0], [33.4, 21113.0], [33.5, 21113.0], [33.6, 21113.0], [33.7, 21114.0], [33.8, 21114.0], [33.9, 21114.0], [34.0, 21115.0], [34.1, 21115.0], [34.2, 21115.0], [34.3, 21116.0], [34.4, 21116.0], [34.5, 21118.0], [34.6, 21119.0], [34.7, 21119.0], [34.8, 21120.0], [34.9, 21120.0], [35.0, 21121.0], [35.1, 21121.0], [35.2, 21121.0], [35.3, 21125.0], [35.4, 21140.0], [35.5, 21140.0], [35.6, 21150.0], [35.7, 21164.0], [35.8, 21164.0], [35.9, 21221.0], [36.0, 21435.0], [36.1, 21435.0], [36.2, 22525.0], [36.3, 22778.0], [36.4, 22778.0], [36.5, 23477.0], [36.6, 24303.0], [36.7, 24303.0], [36.8, 24599.0], [36.9, 24600.0], [37.0, 24600.0], [37.1, 24711.0], [37.2, 25027.0], [37.3, 25027.0], [37.4, 27747.0], [37.5, 28044.0], [37.6, 28044.0], [37.7, 28201.0], [37.8, 28853.0], [37.9, 28853.0], [38.0, 29602.0], [38.1, 29789.0], [38.2, 29789.0], [38.3, 30738.0], [38.4, 30800.0], [38.5, 30800.0], [38.6, 31327.0], [38.7, 31423.0], [38.8, 31423.0], [38.9, 31874.0], [39.0, 32970.0], [39.1, 32970.0], [39.2, 33053.0], [39.3, 33053.0], [39.4, 33163.0], [39.5, 33385.0], [39.6, 33385.0], [39.7, 34363.0], [39.8, 34857.0], [39.9, 34857.0], [40.0, 34870.0], [40.1, 35144.0], [40.2, 35144.0], [40.3, 35157.0], [40.4, 35231.0], [40.5, 35231.0], [40.6, 35390.0], [40.7, 35397.0], [40.8, 35397.0], [40.9, 35416.0], [41.0, 35417.0], [41.1, 35417.0], [41.2, 35484.0], [41.3, 35555.0], [41.4, 35555.0], [41.5, 35596.0], [41.6, 35661.0], [41.7, 35661.0], [41.8, 35690.0], [41.9, 35764.0], [42.0, 35764.0], [42.1, 35824.0], [42.2, 35889.0], [42.3, 35889.0], [42.4, 35904.0], [42.5, 35926.0], [42.6, 35926.0], [42.7, 36028.0], [42.8, 36078.0], [42.9, 36078.0], [43.0, 36208.0], [43.1, 36350.0], [43.2, 36350.0], [43.3, 36367.0], [43.4, 36432.0], [43.5, 36432.0], [43.6, 36553.0], [43.7, 36553.0], [43.8, 36682.0], [43.9, 36895.0], [44.0, 36895.0], [44.1, 36998.0], [44.2, 37260.0], [44.3, 37260.0], [44.4, 37292.0], [44.5, 37653.0], [44.6, 37653.0], [44.7, 37952.0], [44.8, 37988.0], [44.9, 37988.0], [45.0, 38007.0], [45.1, 38431.0], [45.2, 38431.0], [45.3, 38882.0], [45.4, 39340.0], [45.5, 39340.0], [45.6, 39514.0], [45.7, 39583.0], [45.8, 39583.0], [45.9, 39695.0], [46.0, 39697.0], [46.1, 39697.0], [46.2, 39766.0], [46.3, 40134.0], [46.4, 40134.0], [46.5, 40189.0], [46.6, 40256.0], [46.7, 40256.0], [46.8, 40894.0], [46.9, 41213.0], [47.0, 41213.0], [47.1, 41409.0], [47.2, 41924.0], [47.3, 41924.0], [47.4, 42268.0], [47.5, 42281.0], [47.6, 42281.0], [47.7, 42840.0], [47.8, 43329.0], [47.9, 43329.0], [48.0, 43424.0], [48.1, 43424.0], [48.2, 43443.0], [48.3, 43444.0], [48.4, 43444.0], [48.5, 43682.0], [48.6, 44007.0], [48.7, 44007.0], [48.8, 44198.0], [48.9, 44257.0], [49.0, 44257.0], [49.1, 44335.0], [49.2, 44358.0], [49.3, 44358.0], [49.4, 44423.0], [49.5, 44607.0], [49.6, 44607.0], [49.7, 44643.0], [49.8, 44776.0], [49.9, 44776.0], [50.0, 44826.0], [50.1, 44883.0], [50.2, 44883.0], [50.3, 44894.0], [50.4, 44897.0], [50.5, 44897.0], [50.6, 44914.0], [50.7, 44977.0], [50.8, 44977.0], [50.9, 45170.0], [51.0, 45425.0], [51.1, 45425.0], [51.2, 45457.0], [51.3, 45465.0], [51.4, 45465.0], [51.5, 45468.0], [51.6, 45471.0], [51.7, 45471.0], [51.8, 45503.0], [51.9, 45521.0], [52.0, 45521.0], [52.1, 45525.0], [52.2, 45525.0], [52.3, 45527.0], [52.4, 45534.0], [52.5, 45534.0], [52.6, 45588.0], [52.7, 45592.0], [52.8, 45592.0], [52.9, 45598.0], [53.0, 45669.0], [53.1, 45669.0], [53.2, 45738.0], [53.3, 45927.0], [53.4, 45927.0], [53.5, 45976.0], [53.6, 46019.0], [53.7, 46019.0], [53.8, 46068.0], [53.9, 46161.0], [54.0, 46161.0], [54.1, 46162.0], [54.2, 46269.0], [54.3, 46269.0], [54.4, 46278.0], [54.5, 46356.0], [54.6, 46356.0], [54.7, 46368.0], [54.8, 46395.0], [54.9, 46395.0], [55.0, 46403.0], [55.1, 46480.0], [55.2, 46480.0], [55.3, 46490.0], [55.4, 46557.0], [55.5, 46557.0], [55.6, 46614.0], [55.7, 46681.0], [55.8, 46681.0], [55.9, 46696.0], [56.0, 46783.0], [56.1, 46783.0], [56.2, 46800.0], [56.3, 46933.0], [56.4, 46933.0], [56.5, 46994.0], [56.6, 46994.0], [56.7, 47004.0], [56.8, 47016.0], [56.9, 47016.0], [57.0, 47034.0], [57.1, 47037.0], [57.2, 47037.0], [57.3, 47139.0], [57.4, 47171.0], [57.5, 47171.0], [57.6, 47179.0], [57.7, 47187.0], [57.8, 47187.0], [57.9, 47203.0], [58.0, 47205.0], [58.1, 47205.0], [58.2, 47237.0], [58.3, 47280.0], [58.4, 47280.0], [58.5, 47354.0], [58.6, 47389.0], [58.7, 47389.0], [58.8, 47412.0], [58.9, 47509.0], [59.0, 47509.0], [59.1, 47549.0], [59.2, 47562.0], [59.3, 47562.0], [59.4, 47567.0], [59.5, 47741.0], [59.6, 47741.0], [59.7, 47746.0], [59.8, 47804.0], [59.9, 47804.0], [60.0, 47818.0], [60.1, 47831.0], [60.2, 47831.0], [60.3, 47833.0], [60.4, 47859.0], [60.5, 47859.0], [60.6, 47899.0], [60.7, 47919.0], [60.8, 47919.0], [60.9, 47936.0], [61.0, 47936.0], [61.1, 47970.0], [61.2, 47991.0], [61.3, 47991.0], [61.4, 48047.0], [61.5, 48085.0], [61.6, 48085.0], [61.7, 48087.0], [61.8, 48247.0], [61.9, 48247.0], [62.0, 48309.0], [62.1, 48384.0], [62.2, 48384.0], [62.3, 48459.0], [62.4, 48490.0], [62.5, 48490.0], [62.6, 48505.0], [62.7, 48510.0], [62.8, 48510.0], [62.9, 48586.0], [63.0, 48612.0], [63.1, 48612.0], [63.2, 48717.0], [63.3, 48794.0], [63.4, 48794.0], [63.5, 48922.0], [63.6, 48929.0], [63.7, 48929.0], [63.8, 49046.0], [63.9, 49099.0], [64.0, 49099.0], [64.1, 49167.0], [64.2, 49227.0], [64.3, 49227.0], [64.4, 49344.0], [64.5, 49398.0], [64.6, 49398.0], [64.7, 49512.0], [64.8, 49516.0], [64.9, 49516.0], [65.0, 49571.0], [65.1, 49575.0], [65.2, 49575.0], [65.3, 49626.0], [65.4, 49626.0], [65.5, 49633.0], [65.6, 49640.0], [65.7, 49640.0], [65.8, 49653.0], [65.9, 49721.0], [66.0, 49721.0], [66.1, 49727.0], [66.2, 49782.0], [66.3, 49782.0], [66.4, 49842.0], [66.5, 49874.0], [66.6, 49874.0], [66.7, 50088.0], [66.8, 50231.0], [66.9, 50231.0], [67.0, 50260.0], [67.1, 50408.0], [67.2, 50408.0], [67.3, 50489.0], [67.4, 50494.0], [67.5, 50494.0], [67.6, 50534.0], [67.7, 50593.0], [67.8, 50593.0], [67.9, 50638.0], [68.0, 50667.0], [68.1, 50667.0], [68.2, 50673.0], [68.3, 50680.0], [68.4, 50680.0], [68.5, 50717.0], [68.6, 50745.0], [68.7, 50745.0], [68.8, 50914.0], [68.9, 50943.0], [69.0, 50943.0], [69.1, 50949.0], [69.2, 50973.0], [69.3, 50973.0], [69.4, 50979.0], [69.5, 50985.0], [69.6, 50985.0], [69.7, 50995.0], [69.8, 50995.0], [69.9, 51009.0], [70.0, 51029.0], [70.1, 51029.0], [70.2, 51040.0], [70.3, 51074.0], [70.4, 51074.0], [70.5, 51079.0], [70.6, 51095.0], [70.7, 51095.0], [70.8, 51106.0], [70.9, 51134.0], [71.0, 51134.0], [71.1, 51135.0], [71.2, 51163.0], [71.3, 51163.0], [71.4, 51170.0], [71.5, 51172.0], [71.6, 51172.0], [71.7, 51195.0], [71.8, 51204.0], [71.9, 51204.0], [72.0, 51208.0], [72.1, 51213.0], [72.2, 51213.0], [72.3, 51241.0], [72.4, 51248.0], [72.5, 51248.0], [72.6, 51275.0], [72.7, 51348.0], [72.8, 51348.0], [72.9, 51357.0], [73.0, 51431.0], [73.1, 51431.0], [73.2, 51442.0], [73.3, 51460.0], [73.4, 51460.0], [73.5, 51467.0], [73.6, 51470.0], [73.7, 51470.0], [73.8, 51499.0], [73.9, 51553.0], [74.0, 51553.0], [74.1, 51560.0], [74.2, 51560.0], [74.3, 51581.0], [74.4, 51584.0], [74.5, 51584.0], [74.6, 51595.0], [74.7, 51612.0], [74.8, 51612.0], [74.9, 51623.0], [75.0, 51627.0], [75.1, 51627.0], [75.2, 51645.0], [75.3, 51649.0], [75.4, 51649.0], [75.5, 51650.0], [75.6, 51654.0], [75.7, 51654.0], [75.8, 51656.0], [75.9, 51660.0], [76.0, 51660.0], [76.1, 51673.0], [76.2, 51677.0], [76.3, 51677.0], [76.4, 51730.0], [76.5, 51758.0], [76.6, 51758.0], [76.7, 51798.0], [76.8, 51818.0], [76.9, 51818.0], [77.0, 51827.0], [77.1, 51835.0], [77.2, 51835.0], [77.3, 51877.0], [77.4, 51913.0], [77.5, 51913.0], [77.6, 51982.0], [77.7, 52045.0], [77.8, 52045.0], [77.9, 52053.0], [78.0, 52063.0], [78.1, 52063.0], [78.2, 52066.0], [78.3, 52066.0], [78.4, 52074.0], [78.5, 52090.0], [78.6, 52090.0], [78.7, 52094.0], [78.8, 52100.0], [78.9, 52100.0], [79.0, 52106.0], [79.1, 52213.0], [79.2, 52213.0], [79.3, 52577.0], [79.4, 52628.0], [79.5, 52628.0], [79.6, 52630.0], [79.7, 52726.0], [79.8, 52726.0], [79.9, 52733.0], [80.0, 52781.0], [80.1, 52781.0], [80.2, 52788.0], [80.3, 52800.0], [80.4, 52800.0], [80.5, 52818.0], [80.6, 52860.0], [80.7, 52860.0], [80.8, 52899.0], [80.9, 52903.0], [81.0, 52903.0], [81.1, 52951.0], [81.2, 52984.0], [81.3, 52984.0], [81.4, 53007.0], [81.5, 53011.0], [81.6, 53011.0], [81.7, 53051.0], [81.8, 53094.0], [81.9, 53094.0], [82.0, 53101.0], [82.1, 53103.0], [82.2, 53103.0], [82.3, 53109.0], [82.4, 53162.0], [82.5, 53162.0], [82.6, 53192.0], [82.7, 53192.0], [82.8, 53208.0], [82.9, 53233.0], [83.0, 53233.0], [83.1, 53269.0], [83.2, 53274.0], [83.3, 53274.0], [83.4, 53373.0], [83.5, 53393.0], [83.6, 53393.0], [83.7, 53433.0], [83.8, 53451.0], [83.9, 53451.0], [84.0, 53464.0], [84.1, 53529.0], [84.2, 53529.0], [84.3, 53572.0], [84.4, 53596.0], [84.5, 53596.0], [84.6, 53610.0], [84.7, 53675.0], [84.8, 53675.0], [84.9, 53705.0], [85.0, 53755.0], [85.1, 53755.0], [85.2, 53813.0], [85.3, 53842.0], [85.4, 53842.0], [85.5, 53939.0], [85.6, 53988.0], [85.7, 53988.0], [85.8, 54000.0], [85.9, 54017.0], [86.0, 54017.0], [86.1, 54274.0], [86.2, 54341.0], [86.3, 54341.0], [86.4, 54341.0], [86.5, 54374.0], [86.6, 54374.0], [86.7, 54450.0], [86.8, 54505.0], [86.9, 54505.0], [87.0, 54510.0], [87.1, 54510.0], [87.2, 54584.0], [87.3, 54779.0], [87.4, 54779.0], [87.5, 55606.0], [87.6, 55954.0], [87.7, 55954.0], [87.8, 56016.0], [87.9, 56140.0], [88.0, 56140.0], [88.1, 56278.0], [88.2, 56302.0], [88.3, 56302.0], [88.4, 56564.0], [88.5, 56589.0], [88.6, 56589.0], [88.7, 56598.0], [88.8, 56642.0], [88.9, 56642.0], [89.0, 56651.0], [89.1, 56653.0], [89.2, 56653.0], [89.3, 56679.0], [89.4, 56763.0], [89.5, 56763.0], [89.6, 56797.0], [89.7, 56835.0], [89.8, 56835.0], [89.9, 56885.0], [90.0, 56932.0], [90.1, 56932.0], [90.2, 57016.0], [90.3, 57073.0], [90.4, 57073.0], [90.5, 57095.0], [90.6, 57141.0], [90.7, 57141.0], [90.8, 57157.0], [90.9, 57183.0], [91.0, 57183.0], [91.1, 57247.0], [91.2, 57253.0], [91.3, 57253.0], [91.4, 57269.0], [91.5, 57269.0], [91.6, 57274.0], [91.7, 57316.0], [91.8, 57316.0], [91.9, 57396.0], [92.0, 57396.0], [92.1, 57396.0], [92.2, 57421.0], [92.3, 57423.0], [92.4, 57423.0], [92.5, 57431.0], [92.6, 57487.0], [92.7, 57487.0], [92.8, 57596.0], [92.9, 57685.0], [93.0, 57685.0], [93.1, 57720.0], [93.2, 57773.0], [93.3, 57773.0], [93.4, 57790.0], [93.5, 57820.0], [93.6, 57820.0], [93.7, 57834.0], [93.8, 57845.0], [93.9, 57845.0], [94.0, 57867.0], [94.1, 57909.0], [94.2, 57909.0], [94.3, 58083.0], [94.4, 58168.0], [94.5, 58168.0], [94.6, 58742.0], [94.7, 58750.0], [94.8, 58750.0], [94.9, 58795.0], [95.0, 58862.0], [95.1, 58862.0], [95.2, 59298.0], [95.3, 59488.0], [95.4, 59488.0], [95.5, 59766.0], [95.6, 59837.0], [95.7, 59837.0], [95.8, 60131.0], [95.9, 60131.0], [96.0, 60250.0], [96.1, 60567.0], [96.2, 60567.0], [96.3, 61067.0], [96.4, 61322.0], [96.5, 61322.0], [96.6, 61591.0], [96.7, 61667.0], [96.8, 61667.0], [96.9, 62085.0], [97.0, 62111.0], [97.1, 62111.0], [97.2, 62702.0], [97.3, 62820.0], [97.4, 62820.0], [97.5, 62820.0], [97.6, 63441.0], [97.7, 63441.0], [97.8, 63916.0], [97.9, 64083.0], [98.0, 64083.0], [98.1, 64445.0], [98.2, 65165.0], [98.3, 65165.0], [98.4, 65515.0], [98.5, 65883.0], [98.6, 65883.0], [98.7, 66170.0], [98.8, 66594.0], [98.9, 66594.0], [99.0, 67341.0], [99.1, 67515.0], [99.2, 67515.0], [99.3, 70418.0], [99.4, 70550.0], [99.5, 70550.0], [99.6, 74077.0], [99.7, 74338.0], [99.8, 74338.0], [99.9, 99467.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 127.0], [0.1, 127.0], [0.2, 132.0], [0.3, 132.0], [0.4, 133.0], [0.5, 134.0], [0.6, 134.0], [0.7, 134.0], [0.8, 135.0], [0.9, 135.0], [1.0, 136.0], [1.1, 136.0], [1.2, 136.0], [1.3, 137.0], [1.4, 137.0], [1.5, 137.0], [1.6, 138.0], [1.7, 140.0], [1.8, 140.0], [1.9, 140.0], [2.0, 141.0], [2.1, 141.0], [2.2, 141.0], [2.3, 144.0], [2.4, 144.0], [2.5, 144.0], [2.6, 144.0], [2.7, 144.0], [2.8, 145.0], [2.9, 145.0], [3.0, 145.0], [3.1, 145.0], [3.2, 145.0], [3.3, 145.0], [3.4, 146.0], [3.5, 147.0], [3.6, 147.0], [3.7, 147.0], [3.8, 147.0], [3.9, 147.0], [4.0, 147.0], [4.1, 147.0], [4.2, 147.0], [4.3, 147.0], [4.4, 147.0], [4.5, 147.0], [4.6, 147.0], [4.7, 147.0], [4.8, 148.0], [4.9, 149.0], [5.0, 149.0], [5.1, 150.0], [5.2, 150.0], [5.3, 150.0], [5.4, 150.0], [5.5, 150.0], [5.6, 150.0], [5.7, 150.0], [5.8, 150.0], [5.9, 150.0], [6.0, 150.0], [6.1, 150.0], [6.2, 150.0], [6.3, 151.0], [6.4, 151.0], [6.5, 151.0], [6.6, 151.0], [6.7, 151.0], [6.8, 151.0], [6.9, 151.0], [7.0, 151.0], [7.1, 151.0], [7.2, 152.0], [7.3, 153.0], [7.4, 153.0], [7.5, 153.0], [7.6, 153.0], [7.7, 153.0], [7.8, 154.0], [7.9, 154.0], [8.0, 154.0], [8.1, 154.0], [8.2, 154.0], [8.3, 154.0], [8.4, 154.0], [8.5, 155.0], [8.6, 155.0], [8.7, 155.0], [8.8, 155.0], [8.9, 155.0], [9.0, 155.0], [9.1, 155.0], [9.2, 155.0], [9.3, 155.0], [9.4, 155.0], [9.5, 156.0], [9.6, 156.0], [9.7, 156.0], [9.8, 156.0], [9.9, 157.0], [10.0, 157.0], [10.1, 157.0], [10.2, 158.0], [10.3, 158.0], [10.4, 158.0], [10.5, 158.0], [10.6, 158.0], [10.7, 158.0], [10.8, 158.0], [10.9, 158.0], [11.0, 159.0], [11.1, 159.0], [11.2, 159.0], [11.3, 159.0], [11.4, 160.0], [11.5, 160.0], [11.6, 160.0], [11.7, 161.0], [11.8, 161.0], [11.9, 161.0], [12.0, 161.0], [12.1, 161.0], [12.2, 161.0], [12.3, 161.0], [12.4, 161.0], [12.5, 162.0], [12.6, 162.0], [12.7, 162.0], [12.8, 162.0], [12.9, 164.0], [13.0, 164.0], [13.1, 164.0], [13.2, 164.0], [13.3, 164.0], [13.4, 164.0], [13.5, 164.0], [13.6, 164.0], [13.7, 165.0], [13.8, 165.0], [13.9, 165.0], [14.0, 165.0], [14.1, 165.0], [14.2, 165.0], [14.3, 165.0], [14.4, 165.0], [14.5, 166.0], [14.6, 166.0], [14.7, 166.0], [14.8, 166.0], [14.9, 167.0], [15.0, 167.0], [15.1, 167.0], [15.2, 167.0], [15.3, 167.0], [15.4, 167.0], [15.5, 167.0], [15.6, 167.0], [15.7, 168.0], [15.8, 168.0], [15.9, 168.0], [16.0, 168.0], [16.1, 169.0], [16.2, 169.0], [16.3, 169.0], [16.4, 169.0], [16.5, 169.0], [16.6, 170.0], [16.7, 171.0], [16.8, 171.0], [16.9, 171.0], [17.0, 171.0], [17.1, 171.0], [17.2, 171.0], [17.3, 171.0], [17.4, 171.0], [17.5, 172.0], [17.6, 172.0], [17.7, 172.0], [17.8, 172.0], [17.9, 172.0], [18.0, 172.0], [18.1, 172.0], [18.2, 172.0], [18.3, 172.0], [18.4, 172.0], [18.5, 172.0], [18.6, 173.0], [18.7, 173.0], [18.8, 173.0], [18.9, 173.0], [19.0, 173.0], [19.1, 173.0], [19.2, 174.0], [19.3, 174.0], [19.4, 174.0], [19.5, 174.0], [19.6, 174.0], [19.7, 174.0], [19.8, 175.0], [19.9, 175.0], [20.0, 175.0], [20.1, 175.0], [20.2, 175.0], [20.3, 175.0], [20.4, 175.0], [20.5, 175.0], [20.6, 175.0], [20.7, 175.0], [20.8, 175.0], [20.9, 175.0], [21.0, 176.0], [21.1, 176.0], [21.2, 176.0], [21.3, 176.0], [21.4, 177.0], [21.5, 177.0], [21.6, 177.0], [21.7, 177.0], [21.8, 177.0], [21.9, 177.0], [22.0, 177.0], [22.1, 177.0], [22.2, 177.0], [22.3, 177.0], [22.4, 177.0], [22.5, 178.0], [22.6, 178.0], [22.7, 178.0], [22.8, 178.0], [22.9, 178.0], [23.0, 179.0], [23.1, 179.0], [23.2, 179.0], [23.3, 179.0], [23.4, 179.0], [23.5, 179.0], [23.6, 179.0], [23.7, 179.0], [23.8, 179.0], [23.9, 180.0], [24.0, 180.0], [24.1, 180.0], [24.2, 180.0], [24.3, 180.0], [24.4, 180.0], [24.5, 181.0], [24.6, 181.0], [24.7, 181.0], [24.8, 182.0], [24.9, 182.0], [25.0, 182.0], [25.1, 182.0], [25.2, 182.0], [25.3, 182.0], [25.4, 183.0], [25.5, 183.0], [25.6, 183.0], [25.7, 183.0], [25.8, 183.0], [25.9, 183.0], [26.0, 183.0], [26.1, 183.0], [26.2, 183.0], [26.3, 184.0], [26.4, 184.0], [26.5, 184.0], [26.6, 184.0], [26.7, 184.0], [26.8, 184.0], [26.9, 185.0], [27.0, 185.0], [27.1, 185.0], [27.2, 185.0], [27.3, 185.0], [27.4, 185.0], [27.5, 185.0], [27.6, 185.0], [27.7, 186.0], [27.8, 186.0], [27.9, 186.0], [28.0, 186.0], [28.1, 186.0], [28.2, 186.0], [28.3, 186.0], [28.4, 186.0], [28.5, 186.0], [28.6, 186.0], [28.7, 187.0], [28.8, 187.0], [28.9, 187.0], [29.0, 187.0], [29.1, 187.0], [29.2, 187.0], [29.3, 187.0], [29.4, 187.0], [29.5, 188.0], [29.6, 188.0], [29.7, 188.0], [29.8, 188.0], [29.9, 189.0], [30.0, 189.0], [30.1, 192.0], [30.2, 192.0], [30.3, 192.0], [30.4, 192.0], [30.5, 192.0], [30.6, 193.0], [30.7, 193.0], [30.8, 193.0], [30.9, 193.0], [31.0, 196.0], [31.1, 196.0], [31.2, 196.0], [31.3, 196.0], [31.4, 196.0], [31.5, 196.0], [31.6, 197.0], [31.7, 197.0], [31.8, 197.0], [31.9, 197.0], [32.0, 197.0], [32.1, 197.0], [32.2, 198.0], [32.3, 198.0], [32.4, 198.0], [32.5, 198.0], [32.6, 198.0], [32.7, 198.0], [32.8, 199.0], [32.9, 199.0], [33.0, 199.0], [33.1, 199.0], [33.2, 199.0], [33.3, 200.0], [33.4, 200.0], [33.5, 200.0], [33.6, 200.0], [33.7, 201.0], [33.8, 201.0], [33.9, 201.0], [34.0, 201.0], [34.1, 201.0], [34.2, 201.0], [34.3, 202.0], [34.4, 202.0], [34.5, 202.0], [34.6, 202.0], [34.7, 202.0], [34.8, 202.0], [34.9, 202.0], [35.0, 203.0], [35.1, 203.0], [35.2, 203.0], [35.3, 204.0], [35.4, 205.0], [35.5, 205.0], [35.6, 205.0], [35.7, 206.0], [35.8, 206.0], [35.9, 206.0], [36.0, 207.0], [36.1, 207.0], [36.2, 207.0], [36.3, 208.0], [36.4, 208.0], [36.5, 209.0], [36.6, 209.0], [36.7, 209.0], [36.8, 209.0], [36.9, 209.0], [37.0, 209.0], [37.1, 210.0], [37.2, 210.0], [37.3, 210.0], [37.4, 210.0], [37.5, 210.0], [37.6, 210.0], [37.7, 211.0], [37.8, 211.0], [37.9, 211.0], [38.0, 211.0], [38.1, 212.0], [38.2, 212.0], [38.3, 212.0], [38.4, 212.0], [38.5, 212.0], [38.6, 212.0], [38.7, 212.0], [38.8, 212.0], [38.9, 212.0], [39.0, 212.0], [39.1, 212.0], [39.2, 214.0], [39.3, 214.0], [39.4, 214.0], [39.5, 214.0], [39.6, 214.0], [39.7, 214.0], [39.8, 214.0], [39.9, 214.0], [40.0, 214.0], [40.1, 215.0], [40.2, 215.0], [40.3, 215.0], [40.4, 215.0], [40.5, 215.0], [40.6, 215.0], [40.7, 216.0], [40.8, 216.0], [40.9, 217.0], [41.0, 217.0], [41.1, 217.0], [41.2, 217.0], [41.3, 217.0], [41.4, 217.0], [41.5, 217.0], [41.6, 218.0], [41.7, 218.0], [41.8, 218.0], [41.9, 218.0], [42.0, 218.0], [42.1, 218.0], [42.2, 218.0], [42.3, 218.0], [42.4, 219.0], [42.5, 219.0], [42.6, 219.0], [42.7, 219.0], [42.8, 219.0], [42.9, 219.0], [43.0, 219.0], [43.1, 219.0], [43.2, 219.0], [43.3, 219.0], [43.4, 219.0], [43.5, 219.0], [43.6, 219.0], [43.7, 219.0], [43.8, 220.0], [43.9, 220.0], [44.0, 220.0], [44.1, 220.0], [44.2, 220.0], [44.3, 220.0], [44.4, 220.0], [44.5, 220.0], [44.6, 220.0], [44.7, 220.0], [44.8, 221.0], [44.9, 221.0], [45.0, 221.0], [45.1, 221.0], [45.2, 221.0], [45.3, 221.0], [45.4, 221.0], [45.5, 221.0], [45.6, 222.0], [45.7, 222.0], [45.8, 222.0], [45.9, 222.0], [46.0, 222.0], [46.1, 222.0], [46.2, 222.0], [46.3, 222.0], [46.4, 222.0], [46.5, 222.0], [46.6, 222.0], [46.7, 222.0], [46.8, 222.0], [46.9, 222.0], [47.0, 222.0], [47.1, 222.0], [47.2, 223.0], [47.3, 223.0], [47.4, 223.0], [47.5, 223.0], [47.6, 223.0], [47.7, 223.0], [47.8, 223.0], [47.9, 223.0], [48.0, 224.0], [48.1, 224.0], [48.2, 224.0], [48.3, 224.0], [48.4, 224.0], [48.5, 224.0], [48.6, 224.0], [48.7, 224.0], [48.8, 224.0], [48.9, 225.0], [49.0, 225.0], [49.1, 225.0], [49.2, 225.0], [49.3, 225.0], [49.4, 225.0], [49.5, 226.0], [49.6, 226.0], [49.7, 226.0], [49.8, 226.0], [49.9, 226.0], [50.0, 226.0], [50.1, 226.0], [50.2, 226.0], [50.3, 226.0], [50.4, 226.0], [50.5, 226.0], [50.6, 226.0], [50.7, 227.0], [50.8, 227.0], [50.9, 227.0], [51.0, 227.0], [51.1, 227.0], [51.2, 227.0], [51.3, 227.0], [51.4, 227.0], [51.5, 227.0], [51.6, 228.0], [51.7, 228.0], [51.8, 228.0], [51.9, 228.0], [52.0, 228.0], [52.1, 228.0], [52.2, 228.0], [52.3, 228.0], [52.4, 229.0], [52.5, 229.0], [52.6, 229.0], [52.7, 229.0], [52.8, 229.0], [52.9, 229.0], [53.0, 229.0], [53.1, 229.0], [53.2, 230.0], [53.3, 230.0], [53.4, 230.0], [53.5, 230.0], [53.6, 230.0], [53.7, 230.0], [53.8, 230.0], [53.9, 230.0], [54.0, 230.0], [54.1, 230.0], [54.2, 230.0], [54.3, 230.0], [54.4, 230.0], [54.5, 230.0], [54.6, 230.0], [54.7, 230.0], [54.8, 231.0], [54.9, 231.0], [55.0, 231.0], [55.1, 231.0], [55.2, 231.0], [55.3, 231.0], [55.4, 231.0], [55.5, 231.0], [55.6, 231.0], [55.7, 232.0], [55.8, 232.0], [55.9, 232.0], [56.0, 232.0], [56.1, 232.0], [56.2, 232.0], [56.3, 232.0], [56.4, 232.0], [56.5, 233.0], [56.6, 233.0], [56.7, 233.0], [56.8, 233.0], [56.9, 233.0], [57.0, 233.0], [57.1, 233.0], [57.2, 233.0], [57.3, 233.0], [57.4, 233.0], [57.5, 233.0], [57.6, 233.0], [57.7, 233.0], [57.8, 233.0], [57.9, 233.0], [58.0, 233.0], [58.1, 233.0], [58.2, 234.0], [58.3, 234.0], [58.4, 234.0], [58.5, 234.0], [58.6, 235.0], [58.7, 235.0], [58.8, 235.0], [58.9, 235.0], [59.0, 235.0], [59.1, 236.0], [59.2, 236.0], [59.3, 236.0], [59.4, 236.0], [59.5, 236.0], [59.6, 236.0], [59.7, 237.0], [59.8, 237.0], [59.9, 237.0], [60.0, 237.0], [60.1, 237.0], [60.2, 237.0], [60.3, 237.0], [60.4, 237.0], [60.5, 237.0], [60.6, 237.0], [60.7, 237.0], [60.8, 237.0], [60.9, 237.0], [61.0, 237.0], [61.1, 237.0], [61.2, 238.0], [61.3, 238.0], [61.4, 238.0], [61.5, 238.0], [61.6, 238.0], [61.7, 238.0], [61.8, 239.0], [61.9, 239.0], [62.0, 239.0], [62.1, 239.0], [62.2, 239.0], [62.3, 239.0], [62.4, 239.0], [62.5, 239.0], [62.6, 239.0], [62.7, 240.0], [62.8, 240.0], [62.9, 240.0], [63.0, 240.0], [63.1, 240.0], [63.2, 240.0], [63.3, 240.0], [63.4, 240.0], [63.5, 240.0], [63.6, 240.0], [63.7, 240.0], [63.8, 240.0], [63.9, 241.0], [64.0, 241.0], [64.1, 241.0], [64.2, 241.0], [64.3, 241.0], [64.4, 241.0], [64.5, 241.0], [64.6, 241.0], [64.7, 241.0], [64.8, 241.0], [64.9, 241.0], [65.0, 242.0], [65.1, 242.0], [65.2, 242.0], [65.3, 242.0], [65.4, 242.0], [65.5, 243.0], [65.6, 243.0], [65.7, 243.0], [65.8, 244.0], [65.9, 244.0], [66.0, 244.0], [66.1, 244.0], [66.2, 245.0], [66.3, 245.0], [66.4, 246.0], [66.5, 246.0], [66.6, 246.0], [66.7, 246.0], [66.8, 247.0], [66.9, 247.0], [67.0, 247.0], [67.1, 247.0], [67.2, 247.0], [67.3, 247.0], [67.4, 248.0], [67.5, 248.0], [67.6, 248.0], [67.7, 248.0], [67.8, 248.0], [67.9, 248.0], [68.0, 248.0], [68.1, 248.0], [68.2, 248.0], [68.3, 249.0], [68.4, 249.0], [68.5, 249.0], [68.6, 250.0], [68.7, 250.0], [68.8, 250.0], [68.9, 251.0], [69.0, 251.0], [69.1, 252.0], [69.2, 253.0], [69.3, 253.0], [69.4, 253.0], [69.5, 255.0], [69.6, 255.0], [69.7, 255.0], [69.8, 255.0], [69.9, 255.0], [70.0, 256.0], [70.1, 256.0], [70.2, 256.0], [70.3, 257.0], [70.4, 257.0], [70.5, 257.0], [70.6, 258.0], [70.7, 258.0], [70.8, 258.0], [70.9, 259.0], [71.0, 259.0], [71.1, 260.0], [71.2, 261.0], [71.3, 261.0], [71.4, 262.0], [71.5, 262.0], [71.6, 262.0], [71.7, 262.0], [71.8, 263.0], [71.9, 263.0], [72.0, 263.0], [72.1, 263.0], [72.2, 263.0], [72.3, 263.0], [72.4, 264.0], [72.5, 264.0], [72.6, 264.0], [72.7, 264.0], [72.8, 264.0], [72.9, 264.0], [73.0, 265.0], [73.1, 265.0], [73.2, 265.0], [73.3, 265.0], [73.4, 265.0], [73.5, 265.0], [73.6, 265.0], [73.7, 265.0], [73.8, 266.0], [73.9, 266.0], [74.0, 266.0], [74.1, 266.0], [74.2, 266.0], [74.3, 267.0], [74.4, 267.0], [74.5, 267.0], [74.6, 267.0], [74.7, 267.0], [74.8, 267.0], [74.9, 267.0], [75.0, 268.0], [75.1, 268.0], [75.2, 268.0], [75.3, 273.0], [75.4, 273.0], [75.5, 273.0], [75.6, 277.0], [75.7, 277.0], [75.8, 278.0], [75.9, 280.0], [76.0, 280.0], [76.1, 280.0], [76.2, 282.0], [76.3, 282.0], [76.4, 282.0], [76.5, 282.0], [76.6, 282.0], [76.7, 282.0], [76.8, 288.0], [76.9, 288.0], [77.0, 288.0], [77.1, 289.0], [77.2, 289.0], [77.3, 292.0], [77.4, 294.0], [77.5, 294.0], [77.6, 294.0], [77.7, 296.0], [77.8, 296.0], [77.9, 296.0], [78.0, 296.0], [78.1, 296.0], [78.2, 297.0], [78.3, 297.0], [78.4, 297.0], [78.5, 298.0], [78.6, 298.0], [78.7, 298.0], [78.8, 298.0], [78.9, 298.0], [79.0, 299.0], [79.1, 299.0], [79.2, 299.0], [79.3, 299.0], [79.4, 300.0], [79.5, 300.0], [79.6, 301.0], [79.7, 301.0], [79.8, 301.0], [79.9, 303.0], [80.0, 304.0], [80.1, 304.0], [80.2, 304.0], [80.3, 304.0], [80.4, 304.0], [80.5, 305.0], [80.6, 306.0], [80.7, 306.0], [80.8, 307.0], [80.9, 307.0], [81.0, 307.0], [81.1, 308.0], [81.2, 308.0], [81.3, 308.0], [81.4, 308.0], [81.5, 309.0], [81.6, 309.0], [81.7, 310.0], [81.8, 310.0], [81.9, 310.0], [82.0, 311.0], [82.1, 312.0], [82.2, 312.0], [82.3, 313.0], [82.4, 313.0], [82.5, 313.0], [82.6, 313.0], [82.7, 313.0], [82.8, 314.0], [82.9, 315.0], [83.0, 315.0], [83.1, 315.0], [83.2, 315.0], [83.3, 315.0], [83.4, 315.0], [83.5, 315.0], [83.6, 315.0], [83.7, 315.0], [83.8, 316.0], [83.9, 316.0], [84.0, 316.0], [84.1, 316.0], [84.2, 316.0], [84.3, 316.0], [84.4, 317.0], [84.5, 317.0], [84.6, 317.0], [84.7, 318.0], [84.8, 318.0], [84.9, 318.0], [85.0, 318.0], [85.1, 318.0], [85.2, 318.0], [85.3, 318.0], [85.4, 318.0], [85.5, 318.0], [85.6, 318.0], [85.7, 318.0], [85.8, 318.0], [85.9, 319.0], [86.0, 319.0], [86.1, 319.0], [86.2, 319.0], [86.3, 319.0], [86.4, 320.0], [86.5, 320.0], [86.6, 320.0], [86.7, 320.0], [86.8, 321.0], [86.9, 321.0], [87.0, 321.0], [87.1, 321.0], [87.2, 322.0], [87.3, 322.0], [87.4, 322.0], [87.5, 322.0], [87.6, 322.0], [87.7, 322.0], [87.8, 323.0], [87.9, 323.0], [88.0, 323.0], [88.1, 323.0], [88.2, 323.0], [88.3, 323.0], [88.4, 323.0], [88.5, 324.0], [88.6, 324.0], [88.7, 324.0], [88.8, 325.0], [88.9, 325.0], [89.0, 325.0], [89.1, 325.0], [89.2, 325.0], [89.3, 325.0], [89.4, 326.0], [89.5, 326.0], [89.6, 326.0], [89.7, 326.0], [89.8, 326.0], [89.9, 328.0], [90.0, 328.0], [90.1, 328.0], [90.2, 330.0], [90.3, 330.0], [90.4, 330.0], [90.5, 330.0], [90.6, 331.0], [90.7, 331.0], [90.8, 331.0], [90.9, 331.0], [91.0, 331.0], [91.1, 331.0], [91.2, 332.0], [91.3, 332.0], [91.4, 333.0], [91.5, 333.0], [91.6, 333.0], [91.7, 333.0], [91.8, 333.0], [91.9, 334.0], [92.0, 334.0], [92.1, 334.0], [92.2, 334.0], [92.3, 335.0], [92.4, 335.0], [92.5, 335.0], [92.6, 335.0], [92.7, 335.0], [92.8, 335.0], [92.9, 335.0], [93.0, 335.0], [93.1, 335.0], [93.2, 335.0], [93.3, 335.0], [93.4, 335.0], [93.5, 335.0], [93.6, 335.0], [93.7, 336.0], [93.8, 337.0], [93.9, 337.0], [94.0, 338.0], [94.1, 338.0], [94.2, 338.0], [94.3, 338.0], [94.4, 339.0], [94.5, 339.0], [94.6, 339.0], [94.7, 339.0], [94.8, 339.0], [94.9, 340.0], [95.0, 340.0], [95.1, 340.0], [95.2, 341.0], [95.3, 342.0], [95.4, 342.0], [95.5, 342.0], [95.6, 344.0], [95.7, 344.0], [95.8, 345.0], [95.9, 345.0], [96.0, 345.0], [96.1, 345.0], [96.2, 345.0], [96.3, 345.0], [96.4, 347.0], [96.5, 347.0], [96.6, 348.0], [96.7, 348.0], [96.8, 348.0], [96.9, 350.0], [97.0, 351.0], [97.1, 351.0], [97.2, 352.0], [97.3, 352.0], [97.4, 352.0], [97.5, 354.0], [97.6, 354.0], [97.7, 354.0], [97.8, 354.0], [97.9, 356.0], [98.0, 356.0], [98.1, 357.0], [98.2, 357.0], [98.3, 357.0], [98.4, 358.0], [98.5, 358.0], [98.6, 358.0], [98.7, 358.0], [98.8, 360.0], [98.9, 360.0], [99.0, 362.0], [99.1, 368.0], [99.2, 368.0], [99.3, 369.0], [99.4, 9202.0], [99.5, 9202.0], [99.6, 17029.0], [99.7, 17033.0], [99.8, 17033.0], [99.9, 17033.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 4075.0], [0.1, 4235.0], [0.2, 4817.0], [0.3, 4817.0], [0.4, 5432.0], [0.5, 7244.0], [0.6, 12387.0], [0.7, 13638.0], [0.8, 15858.0], [0.9, 19112.0], [1.0, 21027.0], [1.1, 21030.0], [1.2, 21031.0], [1.3, 21034.0], [1.4, 21034.0], [1.5, 21035.0], [1.6, 21036.0], [1.7, 21037.0], [1.8, 21037.0], [1.9, 21037.0], [2.0, 21037.0], [2.1, 21038.0], [2.2, 21038.0], [2.3, 21038.0], [2.4, 21038.0], [2.5, 21038.0], [2.6, 21039.0], [2.7, 21039.0], [2.8, 21039.0], [2.9, 21039.0], [3.0, 21039.0], [3.1, 21039.0], [3.2, 21039.0], [3.3, 21039.0], [3.4, 21039.0], [3.5, 21040.0], [3.6, 21040.0], [3.7, 21040.0], [3.8, 21040.0], [3.9, 21040.0], [4.0, 21040.0], [4.1, 21040.0], [4.2, 21041.0], [4.3, 21041.0], [4.4, 21041.0], [4.5, 21042.0], [4.6, 21042.0], [4.7, 21042.0], [4.8, 21042.0], [4.9, 21042.0], [5.0, 21042.0], [5.1, 21043.0], [5.2, 21043.0], [5.3, 21043.0], [5.4, 21043.0], [5.5, 21043.0], [5.6, 21043.0], [5.7, 21043.0], [5.8, 21043.0], [5.9, 21043.0], [6.0, 21043.0], [6.1, 21043.0], [6.2, 21044.0], [6.3, 21044.0], [6.4, 21044.0], [6.5, 21044.0], [6.6, 21044.0], [6.7, 21044.0], [6.8, 21044.0], [6.9, 21044.0], [7.0, 21044.0], [7.1, 21044.0], [7.2, 21044.0], [7.3, 21045.0], [7.4, 21045.0], [7.5, 21045.0], [7.6, 21045.0], [7.7, 21045.0], [7.8, 21045.0], [7.9, 21045.0], [8.0, 21045.0], [8.1, 21045.0], [8.2, 21045.0], [8.3, 21046.0], [8.4, 21046.0], [8.5, 21046.0], [8.6, 21046.0], [8.7, 21046.0], [8.8, 21046.0], [8.9, 21046.0], [9.0, 21046.0], [9.1, 21046.0], [9.2, 21046.0], [9.3, 21046.0], [9.4, 21046.0], [9.5, 21047.0], [9.6, 21047.0], [9.7, 21047.0], [9.8, 21047.0], [9.9, 21047.0], [10.0, 21047.0], [10.1, 21047.0], [10.2, 21047.0], [10.3, 21047.0], [10.4, 21047.0], [10.5, 21047.0], [10.6, 21047.0], [10.7, 21047.0], [10.8, 21047.0], [10.9, 21047.0], [11.0, 21047.0], [11.1, 21047.0], [11.2, 21047.0], [11.3, 21047.0], [11.4, 21047.0], [11.5, 21047.0], [11.6, 21047.0], [11.7, 21048.0], [11.8, 21048.0], [11.9, 21048.0], [12.0, 21048.0], [12.1, 21048.0], [12.2, 21048.0], [12.3, 21048.0], [12.4, 21048.0], [12.5, 21049.0], [12.6, 21049.0], [12.7, 21049.0], [12.8, 21049.0], [12.9, 21049.0], [13.0, 21049.0], [13.1, 21049.0], [13.2, 21049.0], [13.3, 21049.0], [13.4, 21049.0], [13.5, 21049.0], [13.6, 21049.0], [13.7, 21049.0], [13.8, 21050.0], [13.9, 21050.0], [14.0, 21050.0], [14.1, 21050.0], [14.2, 21050.0], [14.3, 21050.0], [14.4, 21050.0], [14.5, 21051.0], [14.6, 21051.0], [14.7, 21051.0], [14.8, 21051.0], [14.9, 21052.0], [15.0, 21052.0], [15.1, 21052.0], [15.2, 21052.0], [15.3, 21053.0], [15.4, 21053.0], [15.5, 21053.0], [15.6, 21053.0], [15.7, 21053.0], [15.8, 21054.0], [15.9, 21054.0], [16.0, 21054.0], [16.1, 21054.0], [16.2, 21055.0], [16.3, 21056.0], [16.4, 21056.0], [16.5, 21056.0], [16.6, 21057.0], [16.7, 21057.0], [16.8, 21057.0], [16.9, 21057.0], [17.0, 21058.0], [17.1, 21058.0], [17.2, 21058.0], [17.3, 21058.0], [17.4, 21058.0], [17.5, 21059.0], [17.6, 21059.0], [17.7, 21059.0], [17.8, 21060.0], [17.9, 21060.0], [18.0, 21060.0], [18.1, 21061.0], [18.2, 21061.0], [18.3, 21061.0], [18.4, 21061.0], [18.5, 21062.0], [18.6, 21062.0], [18.7, 21062.0], [18.8, 21064.0], [18.9, 21064.0], [19.0, 21064.0], [19.1, 21064.0], [19.2, 21065.0], [19.3, 21065.0], [19.4, 21065.0], [19.5, 21065.0], [19.6, 21065.0], [19.7, 21065.0], [19.8, 21065.0], [19.9, 21066.0], [20.0, 21067.0], [20.1, 21067.0], [20.2, 21067.0], [20.3, 21068.0], [20.4, 21068.0], [20.5, 21069.0], [20.6, 21070.0], [20.7, 21070.0], [20.8, 21071.0], [20.9, 21071.0], [21.0, 21071.0], [21.1, 21071.0], [21.2, 21072.0], [21.3, 21072.0], [21.4, 21072.0], [21.5, 21073.0], [21.6, 21073.0], [21.7, 21073.0], [21.8, 21074.0], [21.9, 21074.0], [22.0, 21074.0], [22.1, 21074.0], [22.2, 21074.0], [22.3, 21074.0], [22.4, 21074.0], [22.5, 21075.0], [22.6, 21075.0], [22.7, 21075.0], [22.8, 21075.0], [22.9, 21075.0], [23.0, 21075.0], [23.1, 21076.0], [23.2, 21076.0], [23.3, 21077.0], [23.4, 21077.0], [23.5, 21078.0], [23.6, 21078.0], [23.7, 21078.0], [23.8, 21080.0], [23.9, 21080.0], [24.0, 21080.0], [24.1, 21081.0], [24.2, 21081.0], [24.3, 21081.0], [24.4, 21082.0], [24.5, 21082.0], [24.6, 21082.0], [24.7, 21082.0], [24.8, 21082.0], [24.9, 21083.0], [25.0, 21083.0], [25.1, 21083.0], [25.2, 21084.0], [25.3, 21084.0], [25.4, 21084.0], [25.5, 21084.0], [25.6, 21085.0], [25.7, 21085.0], [25.8, 21085.0], [25.9, 21086.0], [26.0, 21086.0], [26.1, 21086.0], [26.2, 21086.0], [26.3, 21086.0], [26.4, 21086.0], [26.5, 21086.0], [26.6, 21087.0], [26.7, 21087.0], [26.8, 21087.0], [26.9, 21087.0], [27.0, 21088.0], [27.1, 21088.0], [27.2, 21088.0], [27.3, 21088.0], [27.4, 21088.0], [27.5, 21088.0], [27.6, 21089.0], [27.7, 21089.0], [27.8, 21089.0], [27.9, 21089.0], [28.0, 21089.0], [28.1, 21089.0], [28.2, 21090.0], [28.3, 21090.0], [28.4, 21090.0], [28.5, 21090.0], [28.6, 21090.0], [28.7, 21090.0], [28.8, 21090.0], [28.9, 21091.0], [29.0, 21091.0], [29.1, 21091.0], [29.2, 21091.0], [29.3, 21091.0], [29.4, 21091.0], [29.5, 21092.0], [29.6, 21092.0], [29.7, 21092.0], [29.8, 21092.0], [29.9, 21093.0], [30.0, 21094.0], [30.1, 21094.0], [30.2, 21095.0], [30.3, 21095.0], [30.4, 21095.0], [30.5, 21096.0], [30.6, 21096.0], [30.7, 21096.0], [30.8, 21096.0], [30.9, 21097.0], [31.0, 21097.0], [31.1, 21098.0], [31.2, 21099.0], [31.3, 21099.0], [31.4, 21100.0], [31.5, 21106.0], [31.6, 21107.0], [31.7, 21107.0], [31.8, 21107.0], [31.9, 21107.0], [32.0, 21108.0], [32.1, 21108.0], [32.2, 21109.0], [32.3, 21109.0], [32.4, 21110.0], [32.5, 21110.0], [32.6, 21110.0], [32.7, 21111.0], [32.8, 21111.0], [32.9, 21111.0], [33.0, 21111.0], [33.1, 21112.0], [33.2, 21112.0], [33.3, 21112.0], [33.4, 21112.0], [33.5, 21112.0], [33.6, 21113.0], [33.7, 21116.0], [33.8, 21117.0], [33.9, 21119.0], [34.0, 21119.0], [34.1, 21119.0], [34.2, 21120.0], [34.3, 21120.0], [34.4, 21121.0], [34.5, 21135.0], [34.6, 21137.0], [34.7, 21137.0], [34.8, 21146.0], [34.9, 21165.0], [35.0, 21166.0], [35.1, 21168.0], [35.2, 21185.0], [35.3, 21186.0], [35.4, 21189.0], [35.5, 21189.0], [35.6, 21192.0], [35.7, 21193.0], [35.8, 21194.0], [35.9, 21194.0], [36.0, 21195.0], [36.1, 21195.0], [36.2, 21195.0], [36.3, 21195.0], [36.4, 21195.0], [36.5, 21195.0], [36.6, 21196.0], [36.7, 21197.0], [36.8, 21198.0], [36.9, 21198.0], [37.0, 21200.0], [37.1, 21200.0], [37.2, 21201.0], [37.3, 21201.0], [37.4, 21201.0], [37.5, 21201.0], [37.6, 21202.0], [37.7, 21204.0], [37.8, 21204.0], [37.9, 21204.0], [38.0, 21204.0], [38.1, 21205.0], [38.2, 21206.0], [38.3, 21210.0], [38.4, 21212.0], [38.5, 21212.0], [38.6, 21212.0], [38.7, 21213.0], [38.8, 21213.0], [38.9, 21215.0], [39.0, 21216.0], [39.1, 21217.0], [39.2, 21218.0], [39.3, 21218.0], [39.4, 21219.0], [39.5, 21219.0], [39.6, 21219.0], [39.7, 21220.0], [39.8, 21221.0], [39.9, 21222.0], [40.0, 21223.0], [40.1, 21223.0], [40.2, 21225.0], [40.3, 21226.0], [40.4, 21226.0], [40.5, 21226.0], [40.6, 21228.0], [40.7, 21228.0], [40.8, 21228.0], [40.9, 21228.0], [41.0, 21229.0], [41.1, 21230.0], [41.2, 21230.0], [41.3, 21230.0], [41.4, 21230.0], [41.5, 21230.0], [41.6, 21230.0], [41.7, 21231.0], [41.8, 21231.0], [41.9, 21232.0], [42.0, 21232.0], [42.1, 21233.0], [42.2, 21234.0], [42.3, 21234.0], [42.4, 21235.0], [42.5, 21235.0], [42.6, 21236.0], [42.7, 21236.0], [42.8, 21237.0], [42.9, 21237.0], [43.0, 21238.0], [43.1, 21238.0], [43.2, 21238.0], [43.3, 21239.0], [43.4, 21239.0], [43.5, 21239.0], [43.6, 21240.0], [43.7, 21241.0], [43.8, 21241.0], [43.9, 21242.0], [44.0, 21242.0], [44.1, 21243.0], [44.2, 21243.0], [44.3, 21243.0], [44.4, 21245.0], [44.5, 21245.0], [44.6, 21246.0], [44.7, 21246.0], [44.8, 21247.0], [44.9, 21247.0], [45.0, 21248.0], [45.1, 21248.0], [45.2, 21248.0], [45.3, 21250.0], [45.4, 21251.0], [45.5, 21252.0], [45.6, 21253.0], [45.7, 21256.0], [45.8, 21260.0], [45.9, 21261.0], [46.0, 21262.0], [46.1, 21262.0], [46.2, 21264.0], [46.3, 21266.0], [46.4, 21266.0], [46.5, 21268.0], [46.6, 21270.0], [46.7, 21272.0], [46.8, 21273.0], [46.9, 21274.0], [47.0, 21276.0], [47.1, 21277.0], [47.2, 21281.0], [47.3, 21284.0], [47.4, 21286.0], [47.5, 21287.0], [47.6, 21290.0], [47.7, 21296.0], [47.8, 21296.0], [47.9, 21301.0], [48.0, 21306.0], [48.1, 21306.0], [48.2, 21309.0], [48.3, 21310.0], [48.4, 21311.0], [48.5, 21311.0], [48.6, 21315.0], [48.7, 21329.0], [48.8, 21338.0], [48.9, 21348.0], [49.0, 21362.0], [49.1, 21363.0], [49.2, 21371.0], [49.3, 21371.0], [49.4, 21376.0], [49.5, 21383.0], [49.6, 21386.0], [49.7, 21388.0], [49.8, 21390.0], [49.9, 21394.0], [50.0, 21394.0], [50.1, 21398.0], [50.2, 21398.0], [50.3, 21398.0], [50.4, 21398.0], [50.5, 21399.0], [50.6, 21400.0], [50.7, 21401.0], [50.8, 21403.0], [50.9, 21404.0], [51.0, 21405.0], [51.1, 21407.0], [51.2, 21411.0], [51.3, 21413.0], [51.4, 21419.0], [51.5, 21422.0], [51.6, 21425.0], [51.7, 21427.0], [51.8, 21437.0], [51.9, 21438.0], [52.0, 21444.0], [52.1, 21444.0], [52.2, 21446.0], [52.3, 21448.0], [52.4, 21452.0], [52.5, 21452.0], [52.6, 21457.0], [52.7, 21457.0], [52.8, 21461.0], [52.9, 21463.0], [53.0, 21464.0], [53.1, 21466.0], [53.2, 21466.0], [53.3, 21471.0], [53.4, 21471.0], [53.5, 21472.0], [53.6, 21475.0], [53.7, 21477.0], [53.8, 21479.0], [53.9, 21483.0], [54.0, 21486.0], [54.1, 21489.0], [54.2, 21494.0], [54.3, 21498.0], [54.4, 21506.0], [54.5, 21512.0], [54.6, 21512.0], [54.7, 21514.0], [54.8, 21527.0], [54.9, 21542.0], [55.0, 21542.0], [55.1, 21543.0], [55.2, 21557.0], [55.3, 21559.0], [55.4, 21565.0], [55.5, 21566.0], [55.6, 21568.0], [55.7, 21575.0], [55.8, 21576.0], [55.9, 21598.0], [56.0, 21598.0], [56.1, 21610.0], [56.2, 21610.0], [56.3, 21610.0], [56.4, 21614.0], [56.5, 21618.0], [56.6, 21637.0], [56.7, 21661.0], [56.8, 21664.0], [56.9, 21706.0], [57.0, 21712.0], [57.1, 21714.0], [57.2, 21715.0], [57.3, 21718.0], [57.4, 21728.0], [57.5, 21730.0], [57.6, 21730.0], [57.7, 21732.0], [57.8, 21733.0], [57.9, 22747.0], [58.0, 23237.0], [58.1, 23985.0], [58.2, 24478.0], [58.3, 24932.0], [58.4, 24990.0], [58.5, 25115.0], [58.6, 25536.0], [58.7, 28005.0], [58.8, 28283.0], [58.9, 28375.0], [59.0, 29183.0], [59.1, 29957.0], [59.2, 30109.0], [59.3, 30986.0], [59.4, 31078.0], [59.5, 31678.0], [59.6, 31846.0], [59.7, 32114.0], [59.8, 33195.0], [59.9, 33390.0], [60.0, 33819.0], [60.1, 34557.0], [60.2, 35127.0], [60.3, 35158.0], [60.4, 35323.0], [60.5, 35396.0], [60.6, 35644.0], [60.7, 35665.0], [60.8, 35671.0], [60.9, 35700.0], [61.0, 35785.0], [61.1, 35816.0], [61.2, 35841.0], [61.3, 35865.0], [61.4, 35902.0], [61.5, 35984.0], [61.6, 36135.0], [61.7, 36150.0], [61.8, 36155.0], [61.9, 36216.0], [62.0, 36346.0], [62.1, 36396.0], [62.2, 36427.0], [62.3, 36665.0], [62.4, 36675.0], [62.5, 36737.0], [62.6, 36739.0], [62.7, 36905.0], [62.8, 36949.0], [62.9, 37163.0], [63.0, 37518.0], [63.1, 37630.0], [63.2, 37990.0], [63.3, 38196.0], [63.4, 38324.0], [63.5, 38468.0], [63.6, 38478.0], [63.7, 38951.0], [63.8, 39218.0], [63.9, 39570.0], [64.0, 39832.0], [64.1, 39970.0], [64.2, 40058.0], [64.3, 40210.0], [64.4, 40272.0], [64.5, 40520.0], [64.6, 40578.0], [64.7, 40681.0], [64.8, 41281.0], [64.9, 41539.0], [65.0, 42107.0], [65.1, 42366.0], [65.2, 42596.0], [65.3, 42678.0], [65.4, 43304.0], [65.5, 43678.0], [65.6, 43723.0], [65.7, 43731.0], [65.8, 43843.0], [65.9, 43973.0], [66.0, 44186.0], [66.1, 44569.0], [66.2, 44582.0], [66.3, 44632.0], [66.4, 44705.0], [66.5, 44760.0], [66.6, 44986.0], [66.7, 45008.0], [66.8, 45110.0], [66.9, 45220.0], [67.0, 45228.0], [67.1, 45238.0], [67.2, 45245.0], [67.3, 45332.0], [67.4, 45333.0], [67.5, 45339.0], [67.6, 45633.0], [67.7, 45653.0], [67.8, 45658.0], [67.9, 45705.0], [68.0, 45772.0], [68.1, 45772.0], [68.2, 45774.0], [68.3, 45780.0], [68.4, 45802.0], [68.5, 45813.0], [68.6, 45914.0], [68.7, 45916.0], [68.8, 45937.0], [68.9, 46102.0], [69.0, 46156.0], [69.1, 46188.0], [69.2, 46222.0], [69.3, 46258.0], [69.4, 46337.0], [69.5, 46536.0], [69.6, 46540.0], [69.7, 46549.0], [69.8, 46570.0], [69.9, 46640.0], [70.0, 46644.0], [70.1, 46648.0], [70.2, 46829.0], [70.3, 46849.0], [70.4, 46869.0], [70.5, 46870.0], [70.6, 46949.0], [70.7, 46975.0], [70.8, 47023.0], [70.9, 47256.0], [71.0, 47258.0], [71.1, 47269.0], [71.2, 47307.0], [71.3, 47314.0], [71.4, 47398.0], [71.5, 47404.0], [71.6, 47436.0], [71.7, 47448.0], [71.8, 47481.0], [71.9, 47515.0], [72.0, 47544.0], [72.1, 47582.0], [72.2, 47606.0], [72.3, 47649.0], [72.4, 47677.0], [72.5, 47700.0], [72.6, 47783.0], [72.7, 47805.0], [72.8, 47831.0], [72.9, 47916.0], [73.0, 47968.0], [73.1, 48045.0], [73.2, 48061.0], [73.3, 48076.0], [73.4, 48121.0], [73.5, 48122.0], [73.6, 48142.0], [73.7, 48171.0], [73.8, 48190.0], [73.9, 48216.0], [74.0, 48220.0], [74.1, 48253.0], [74.2, 48261.0], [74.3, 48263.0], [74.4, 48276.0], [74.5, 48332.0], [74.6, 48624.0], [74.7, 48646.0], [74.8, 48657.0], [74.9, 48769.0], [75.0, 48868.0], [75.1, 48884.0], [75.2, 48886.0], [75.3, 48917.0], [75.4, 49020.0], [75.5, 49054.0], [75.6, 49184.0], [75.7, 49312.0], [75.8, 49327.0], [75.9, 49365.0], [76.0, 49443.0], [76.1, 49492.0], [76.2, 49661.0], [76.3, 49672.0], [76.4, 49816.0], [76.5, 49835.0], [76.6, 49846.0], [76.7, 49858.0], [76.8, 49864.0], [76.9, 49866.0], [77.0, 49900.0], [77.1, 49955.0], [77.2, 49975.0], [77.3, 50001.0], [77.4, 50032.0], [77.5, 50049.0], [77.6, 50122.0], [77.7, 50195.0], [77.8, 50414.0], [77.9, 50429.0], [78.0, 50479.0], [78.1, 50715.0], [78.2, 50718.0], [78.3, 50885.0], [78.4, 50896.0], [78.5, 50899.0], [78.6, 50933.0], [78.7, 50982.0], [78.8, 50991.0], [78.9, 51026.0], [79.0, 51043.0], [79.1, 51205.0], [79.2, 51258.0], [79.3, 51262.0], [79.4, 51262.0], [79.5, 51270.0], [79.6, 51305.0], [79.7, 51326.0], [79.8, 51368.0], [79.9, 51384.0], [80.0, 51403.0], [80.1, 51408.0], [80.2, 51412.0], [80.3, 51427.0], [80.4, 51430.0], [80.5, 51437.0], [80.6, 51437.0], [80.7, 51448.0], [80.8, 51467.0], [80.9, 51485.0], [81.0, 51488.0], [81.1, 51503.0], [81.2, 51517.0], [81.3, 51525.0], [81.4, 51555.0], [81.5, 51559.0], [81.6, 51645.0], [81.7, 51651.0], [81.8, 51695.0], [81.9, 51699.0], [82.0, 51737.0], [82.1, 51746.0], [82.2, 51755.0], [82.3, 51780.0], [82.4, 51784.0], [82.5, 51819.0], [82.6, 51868.0], [82.7, 51878.0], [82.8, 51891.0], [82.9, 51902.0], [83.0, 51903.0], [83.1, 51923.0], [83.2, 51926.0], [83.3, 51935.0], [83.4, 51993.0], [83.5, 51994.0], [83.6, 52007.0], [83.7, 52013.0], [83.8, 52013.0], [83.9, 52041.0], [84.0, 52081.0], [84.1, 52102.0], [84.2, 52123.0], [84.3, 52136.0], [84.4, 52150.0], [84.5, 52163.0], [84.6, 52230.0], [84.7, 52237.0], [84.8, 52262.0], [84.9, 52273.0], [85.0, 52289.0], [85.1, 52314.0], [85.2, 52319.0], [85.3, 52337.0], [85.4, 52340.0], [85.5, 52357.0], [85.6, 52367.0], [85.7, 52403.0], [85.8, 52420.0], [85.9, 52442.0], [86.0, 52648.0], [86.1, 52942.0], [86.2, 52966.0], [86.3, 52986.0], [86.4, 53074.0], [86.5, 53103.0], [86.6, 53104.0], [86.7, 53112.0], [86.8, 53147.0], [86.9, 53163.0], [87.0, 53165.0], [87.1, 53175.0], [87.2, 53197.0], [87.3, 53239.0], [87.4, 53289.0], [87.5, 53349.0], [87.6, 53353.0], [87.7, 53375.0], [87.8, 53381.0], [87.9, 53387.0], [88.0, 53395.0], [88.1, 53404.0], [88.2, 53465.0], [88.3, 53513.0], [88.4, 53514.0], [88.5, 53515.0], [88.6, 53541.0], [88.7, 53630.0], [88.8, 53750.0], [88.9, 53755.0], [89.0, 53791.0], [89.1, 53841.0], [89.2, 53850.0], [89.3, 53939.0], [89.4, 53966.0], [89.5, 53975.0], [89.6, 54002.0], [89.7, 54032.0], [89.8, 54059.0], [89.9, 54079.0], [90.0, 54081.0], [90.1, 54101.0], [90.2, 54163.0], [90.3, 54283.0], [90.4, 54291.0], [90.5, 54479.0], [90.6, 54496.0], [90.7, 54527.0], [90.8, 54533.0], [90.9, 54557.0], [91.0, 54683.0], [91.1, 54712.0], [91.2, 54747.0], [91.3, 54785.0], [91.4, 55012.0], [91.5, 55066.0], [91.6, 55900.0], [91.7, 56251.0], [91.8, 56458.0], [91.9, 56552.0], [92.0, 56559.0], [92.1, 56618.0], [92.2, 56757.0], [92.3, 56830.0], [92.4, 56930.0], [92.5, 56949.0], [92.6, 56984.0], [92.7, 56995.0], [92.8, 57041.0], [92.9, 57103.0], [93.0, 57110.0], [93.1, 57159.0], [93.2, 57159.0], [93.3, 57287.0], [93.4, 57346.0], [93.5, 57394.0], [93.6, 57397.0], [93.7, 57504.0], [93.8, 57512.0], [93.9, 57540.0], [94.0, 57566.0], [94.1, 57599.0], [94.2, 57623.0], [94.3, 57666.0], [94.4, 57693.0], [94.5, 57696.0], [94.6, 57719.0], [94.7, 57734.0], [94.8, 57789.0], [94.9, 57812.0], [95.0, 57825.0], [95.1, 57848.0], [95.2, 57862.0], [95.3, 57914.0], [95.4, 57959.0], [95.5, 58023.0], [95.6, 58073.0], [95.7, 58089.0], [95.8, 58142.0], [95.9, 58239.0], [96.0, 58268.0], [96.1, 58337.0], [96.2, 58438.0], [96.3, 58526.0], [96.4, 58975.0], [96.5, 59144.0], [96.6, 59190.0], [96.7, 59230.0], [96.8, 59477.0], [96.9, 59863.0], [97.0, 60000.0], [97.1, 60103.0], [97.2, 60487.0], [97.3, 60578.0], [97.4, 61036.0], [97.5, 61463.0], [97.6, 61749.0], [97.7, 61815.0], [97.8, 61816.0], [97.9, 62338.0], [98.0, 62457.0], [98.1, 62972.0], [98.2, 63127.0], [98.3, 63166.0], [98.4, 63660.0], [98.5, 64413.0], [98.6, 64444.0], [98.7, 64846.0], [98.8, 65443.0], [98.9, 65893.0], [99.0, 66016.0], [99.1, 66390.0], [99.2, 66845.0], [99.3, 67635.0], [99.4, 67666.0], [99.5, 70744.0], [99.6, 70779.0], [99.7, 74425.0], [99.8, 74662.0], [99.9, 99694.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 304.0, "series": [{"data": [[67500.0, 1.0], [32900.0, 1.0], [33300.0, 1.0], [35300.0, 2.0], [36500.0, 1.0], [35700.0, 1.0], [36900.0, 1.0], [39300.0, 1.0], [39700.0, 1.0], [40100.0, 2.0], [43300.0, 1.0], [44100.0, 1.0], [44900.0, 2.0], [46900.0, 2.0], [45700.0, 1.0], [46100.0, 2.0], [46500.0, 1.0], [47300.0, 2.0], [47700.0, 2.0], [48500.0, 3.0], [48900.0, 2.0], [49300.0, 2.0], [49700.0, 3.0], [50500.0, 2.0], [50900.0, 7.0], [51300.0, 2.0], [51700.0, 3.0], [52100.0, 2.0], [52500.0, 1.0], [52900.0, 3.0], [53300.0, 2.0], [53700.0, 2.0], [54500.0, 3.0], [56100.0, 1.0], [56500.0, 3.0], [56900.0, 1.0], [57300.0, 3.0], [57700.0, 3.0], [58100.0, 1.0], [59700.0, 1.0], [60100.0, 1.0], [60500.0, 1.0], [61300.0, 1.0], [62100.0, 1.0], [65800.0, 1.0], [99400.0, 1.0], [3700.0, 1.0], [3900.0, 1.0], [66500.0, 1.0], [67300.0, 1.0], [4500.0, 2.0], [70500.0, 1.0], [5100.0, 1.0], [7000.0, 1.0], [12100.0, 1.0], [13200.0, 1.0], [15500.0, 1.0], [18600.0, 1.0], [21000.0, 198.0], [21200.0, 1.0], [21400.0, 1.0], [23400.0, 1.0], [24600.0, 1.0], [25000.0, 1.0], [28000.0, 1.0], [28200.0, 1.0], [28800.0, 1.0], [29600.0, 1.0], [30800.0, 1.0], [31400.0, 1.0], [31800.0, 1.0], [34800.0, 2.0], [35200.0, 1.0], [35600.0, 2.0], [36800.0, 1.0], [36400.0, 1.0], [36000.0, 2.0], [37200.0, 2.0], [37600.0, 1.0], [38000.0, 1.0], [38400.0, 1.0], [38800.0, 1.0], [39600.0, 2.0], [40800.0, 1.0], [41200.0, 1.0], [42800.0, 1.0], [43600.0, 1.0], [44000.0, 1.0], [44800.0, 4.0], [44400.0, 1.0], [46800.0, 1.0], [45600.0, 1.0], [46000.0, 2.0], [46400.0, 3.0], [47200.0, 4.0], [48000.0, 3.0], [48400.0, 2.0], [49200.0, 1.0], [49600.0, 4.0], [50000.0, 1.0], [50400.0, 3.0], [51200.0, 6.0], [51600.0, 11.0], [52000.0, 7.0], [52800.0, 4.0], [53200.0, 4.0], [53600.0, 2.0], [54000.0, 2.0], [54400.0, 1.0], [55600.0, 1.0], [56000.0, 1.0], [56800.0, 2.0], [57200.0, 4.0], [57600.0, 1.0], [58000.0, 1.0], [58800.0, 1.0], [59200.0, 1.0], [61600.0, 1.0], [62000.0, 1.0], [62800.0, 2.0], [64000.0, 1.0], [64400.0, 1.0], [70400.0, 1.0], [74300.0, 1.0], [34300.0, 1.0], [33100.0, 1.0], [35100.0, 2.0], [35500.0, 2.0], [35900.0, 2.0], [36300.0, 2.0], [37900.0, 2.0], [39500.0, 2.0], [41900.0, 1.0], [44300.0, 2.0], [44700.0, 1.0], [46700.0, 1.0], [45100.0, 1.0], [45500.0, 8.0], [47100.0, 4.0], [45900.0, 2.0], [46300.0, 3.0], [48700.0, 2.0], [47500.0, 4.0], [47900.0, 4.0], [48300.0, 2.0], [49100.0, 1.0], [49500.0, 4.0], [50700.0, 2.0], [51100.0, 7.0], [51500.0, 5.0], [51900.0, 2.0], [52700.0, 4.0], [53100.0, 5.0], [53500.0, 3.0], [53900.0, 2.0], [54300.0, 3.0], [54700.0, 1.0], [55900.0, 1.0], [56300.0, 1.0], [56700.0, 2.0], [57100.0, 3.0], [57500.0, 1.0], [57900.0, 1.0], [58700.0, 3.0], [61500.0, 1.0], [62700.0, 1.0], [63900.0, 1.0], [65100.0, 1.0], [65500.0, 1.0], [66100.0, 1.0], [21100.0, 28.0], [22500.0, 1.0], [22700.0, 1.0], [24300.0, 1.0], [24500.0, 1.0], [24700.0, 1.0], [27700.0, 1.0], [29700.0, 1.0], [30700.0, 1.0], [31300.0, 1.0], [33000.0, 1.0], [35400.0, 3.0], [35800.0, 2.0], [36600.0, 1.0], [36200.0, 1.0], [40200.0, 1.0], [42200.0, 2.0], [41400.0, 1.0], [43400.0, 3.0], [44600.0, 2.0], [44200.0, 1.0], [46600.0, 3.0], [45400.0, 5.0], [47000.0, 4.0], [46200.0, 2.0], [47400.0, 1.0], [47800.0, 6.0], [48200.0, 1.0], [48600.0, 1.0], [49000.0, 2.0], [49800.0, 2.0], [50200.0, 2.0], [50600.0, 4.0], [51000.0, 6.0], [51400.0, 6.0], [51800.0, 4.0], [52200.0, 1.0], [52600.0, 2.0], [53000.0, 4.0], [53400.0, 3.0], [53800.0, 2.0], [54200.0, 1.0], [56200.0, 1.0], [56600.0, 4.0], [57000.0, 3.0], [57400.0, 4.0], [57800.0, 4.0], [59400.0, 1.0], [59800.0, 1.0], [60200.0, 1.0], [61000.0, 1.0], [63400.0, 1.0], [74000.0, 1.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[17000.0, 3.0], [9200.0, 1.0], [300.0, 132.0], [200.0, 304.0], [100.0, 219.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[70700.0, 2.0], [33300.0, 1.0], [34500.0, 1.0], [35300.0, 2.0], [35700.0, 2.0], [36100.0, 3.0], [36900.0, 2.0], [38100.0, 1.0], [38900.0, 1.0], [40500.0, 2.0], [42100.0, 1.0], [42500.0, 1.0], [43300.0, 1.0], [43700.0, 2.0], [44100.0, 1.0], [44500.0, 2.0], [44900.0, 1.0], [45300.0, 3.0], [46900.0, 2.0], [45700.0, 5.0], [46100.0, 3.0], [46500.0, 5.0], [47300.0, 3.0], [47700.0, 2.0], [48100.0, 5.0], [48900.0, 1.0], [49300.0, 3.0], [50100.0, 2.0], [50900.0, 3.0], [51300.0, 4.0], [51700.0, 5.0], [52100.0, 5.0], [52900.0, 3.0], [53300.0, 6.0], [53700.0, 3.0], [54100.0, 2.0], [54500.0, 3.0], [56500.0, 2.0], [56900.0, 4.0], [57300.0, 3.0], [57700.0, 3.0], [58100.0, 1.0], [58500.0, 1.0], [58900.0, 1.0], [60100.0, 1.0], [60500.0, 1.0], [61700.0, 1.0], [62900.0, 1.0], [65800.0, 1.0], [74600.0, 1.0], [4000.0, 1.0], [4200.0, 1.0], [4800.0, 1.0], [4900.0, 1.0], [5400.0, 1.0], [7200.0, 1.0], [12300.0, 1.0], [13600.0, 1.0], [15800.0, 1.0], [21000.0, 303.0], [21400.0, 38.0], [21200.0, 109.0], [21600.0, 8.0], [23200.0, 1.0], [24400.0, 1.0], [28000.0, 1.0], [28200.0, 1.0], [31000.0, 1.0], [31600.0, 1.0], [31800.0, 1.0], [36400.0, 1.0], [35600.0, 3.0], [37600.0, 1.0], [38400.0, 2.0], [39200.0, 1.0], [40000.0, 1.0], [41200.0, 1.0], [43600.0, 1.0], [45200.0, 4.0], [45600.0, 3.0], [46800.0, 4.0], [47200.0, 3.0], [47600.0, 3.0], [48000.0, 3.0], [48800.0, 3.0], [49600.0, 2.0], [50000.0, 3.0], [50400.0, 3.0], [50800.0, 3.0], [51200.0, 5.0], [51600.0, 4.0], [52000.0, 5.0], [52400.0, 3.0], [53200.0, 2.0], [53600.0, 1.0], [54000.0, 5.0], [54400.0, 2.0], [56400.0, 1.0], [56800.0, 1.0], [57200.0, 1.0], [57600.0, 4.0], [58000.0, 3.0], [58400.0, 1.0], [59200.0, 1.0], [60000.0, 1.0], [60400.0, 1.0], [62400.0, 1.0], [63600.0, 1.0], [64400.0, 2.0], [64800.0, 1.0], [74400.0, 1.0], [66300.0, 1.0], [33100.0, 1.0], [35100.0, 2.0], [36700.0, 2.0], [35900.0, 2.0], [36300.0, 2.0], [37100.0, 1.0], [37500.0, 1.0], [37900.0, 1.0], [38300.0, 1.0], [39500.0, 1.0], [39900.0, 1.0], [41500.0, 1.0], [42300.0, 1.0], [43900.0, 1.0], [44700.0, 2.0], [45100.0, 1.0], [45900.0, 3.0], [46300.0, 1.0], [47500.0, 3.0], [47900.0, 2.0], [48300.0, 1.0], [48700.0, 1.0], [49100.0, 1.0], [49900.0, 3.0], [50700.0, 2.0], [51500.0, 5.0], [51900.0, 7.0], [52300.0, 6.0], [53100.0, 8.0], [53500.0, 4.0], [53900.0, 3.0], [54700.0, 3.0], [55900.0, 1.0], [56700.0, 1.0], [57100.0, 4.0], [57500.0, 5.0], [57900.0, 2.0], [58300.0, 1.0], [59100.0, 2.0], [62300.0, 1.0], [63100.0, 2.0], [19100.0, 1.0], [21300.0, 27.0], [21100.0, 56.0], [21500.0, 17.0], [21700.0, 10.0], [22700.0, 1.0], [23900.0, 1.0], [24900.0, 2.0], [25100.0, 1.0], [25500.0, 1.0], [28300.0, 1.0], [29100.0, 1.0], [29900.0, 1.0], [30100.0, 1.0], [30900.0, 1.0], [32100.0, 1.0], [33800.0, 1.0], [36600.0, 2.0], [35800.0, 3.0], [36200.0, 1.0], [39800.0, 1.0], [40200.0, 2.0], [40600.0, 1.0], [42600.0, 1.0], [43800.0, 1.0], [44600.0, 1.0], [45000.0, 1.0], [45800.0, 2.0], [46200.0, 2.0], [46600.0, 3.0], [47000.0, 1.0], [47400.0, 4.0], [47800.0, 2.0], [48200.0, 6.0], [48600.0, 3.0], [49000.0, 2.0], [49400.0, 2.0], [49800.0, 6.0], [51000.0, 2.0], [51400.0, 11.0], [51800.0, 4.0], [52200.0, 5.0], [52600.0, 1.0], [53000.0, 1.0], [53400.0, 2.0], [53800.0, 2.0], [54200.0, 2.0], [54600.0, 1.0], [55000.0, 2.0], [56200.0, 1.0], [56600.0, 1.0], [57000.0, 1.0], [57800.0, 4.0], [58200.0, 2.0], [59400.0, 1.0], [59800.0, 1.0], [61000.0, 1.0], [61400.0, 1.0], [61800.0, 2.0], [65400.0, 1.0], [66000.0, 1.0], [66800.0, 1.0], [67600.0, 2.0], [99600.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 99600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 655.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 860.0, "series": [{"data": [[0.0, 655.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 860.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 803.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.999999999999999, "minX": 1.70280918E12, "maxY": 513.4421310471529, "series": [{"data": [[1.70280924E12, 513.4421310471529], [1.70280918E12, 437.12139605462824], [1.7028093E12, 6.999999999999999]], "isOverall": false, "label": "Users", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7028093E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 132.0, "minX": 1.0, "maxY": 99694.0, "series": [{"data": [[2.0, 74338.0], [3.0, 74077.0], [4.0, 70550.0], [5.0, 70418.0], [6.0, 67515.0], [7.0, 67341.0], [8.0, 66594.0], [9.0, 66170.0], [10.0, 65883.0], [11.0, 65515.0], [12.0, 65165.0], [13.0, 64445.0], [14.0, 63916.0], [15.0, 64083.0], [16.0, 63441.0], [17.0, 62820.0], [18.0, 62702.0], [19.0, 62820.0], [20.0, 62111.0], [21.0, 62085.0], [22.0, 61667.0], [23.0, 61591.0], [24.0, 61322.0], [25.0, 61067.0], [26.0, 60567.0], [27.0, 60131.0], [28.0, 60250.0], [29.0, 59837.0], [30.0, 59766.0], [31.0, 59488.0], [33.0, 58795.0], [32.0, 59298.0], [35.0, 58750.0], [34.0, 58862.0], [37.0, 41409.0], [36.0, 58742.0], [39.0, 58168.0], [38.0, 58083.0], [41.0, 57845.0], [40.0, 57773.0], [43.0, 57909.0], [42.0, 57867.0], [45.0, 57790.0], [44.0, 57834.0], [47.0, 57720.0], [46.0, 57820.0], [49.0, 57685.0], [48.0, 57421.0], [51.0, 57316.0], [50.0, 57596.0], [53.0, 57455.0], [55.0, 57396.0], [54.0, 57431.0], [57.0, 57141.0], [56.0, 57253.0], [59.0, 57274.0], [58.0, 57269.0], [61.0, 57396.0], [60.0, 57157.0], [63.0, 57073.0], [62.0, 57095.0], [67.0, 56885.0], [66.0, 57183.0], [65.0, 57016.0], [64.0, 57247.0], [71.0, 56653.0], [70.0, 56797.0], [69.0, 56932.0], [68.0, 56763.0], [75.0, 56598.0], [74.0, 56835.0], [73.0, 56589.0], [72.0, 56651.0], [79.0, 56302.0], [78.0, 56564.0], [77.0, 56679.0], [76.0, 56642.0], [83.0, 55954.0], [82.0, 56016.0], [81.0, 56209.0], [87.0, 54450.0], [86.0, 54584.0], [85.0, 54779.0], [84.0, 55606.0], [91.0, 54374.0], [90.0, 54341.0], [89.0, 54505.0], [88.0, 54510.0], [94.0, 54274.0], [93.0, 45669.5], [99.0, 53705.0], [98.0, 53939.0], [97.0, 54017.0], [96.0, 53994.0], [103.0, 53755.0], [102.0, 53842.0], [101.0, 53596.0], [100.0, 53675.0], [107.0, 53451.0], [106.0, 53610.0], [105.0, 53572.0], [104.0, 53813.0], [111.0, 53433.0], [110.0, 53373.0], [109.0, 53529.0], [108.0, 53393.0], [115.0, 53274.0], [114.0, 53101.0], [113.0, 53269.0], [112.0, 53464.0], [119.0, 53103.0], [118.0, 53192.0], [117.0, 52951.0], [116.0, 53233.0], [123.0, 52860.0], [122.0, 53162.0], [121.0, 53208.0], [120.0, 53109.0], [127.0, 52894.0], [125.0, 53094.0], [124.0, 52984.0], [135.0, 52733.0], [134.0, 52726.0], [133.0, 52903.0], [132.0, 52899.0], [131.0, 53011.0], [130.0, 52800.0], [129.0, 53051.0], [128.0, 52818.0], [143.0, 52100.0], [142.0, 52106.0], [141.0, 52094.0], [140.0, 52213.0], [139.0, 52628.0], [138.0, 52577.0], [137.0, 52788.0], [136.0, 52630.0], [151.0, 51982.0], [150.0, 52066.0], [149.0, 52063.0], [148.0, 52074.0], [147.0, 52090.0], [146.0, 51818.0], [145.0, 51877.0], [144.0, 52053.0], [159.0, 51623.0], [158.0, 51827.0], [157.0, 51913.0], [156.0, 51650.5], [154.0, 51730.0], [153.0, 51835.0], [152.0, 52045.0], [166.0, 51557.5], [164.0, 51499.0], [163.0, 51758.0], [162.0, 51650.0], [161.0, 51798.0], [160.0, 51660.0], [175.0, 51560.0], [174.0, 51677.0], [173.0, 51584.0], [172.0, 51543.5], [170.0, 51581.0], [169.0, 51632.666666666664], [183.0, 51470.0], [182.0, 51431.0], [181.0, 51195.0], [180.0, 51357.0], [179.0, 51467.0], [178.0, 51348.0], [177.0, 51553.0], [176.0, 51612.0], [191.0, 51163.0], [190.0, 51275.0], [189.0, 51040.0], [188.0, 51204.0], [187.0, 51079.0], [186.0, 51172.0], [185.0, 51208.0], [184.0, 51170.0], [199.0, 51095.0], [198.0, 51135.0], [197.0, 50914.0], [196.0, 51241.0], [195.0, 51028.666666666664], [192.0, 51248.0], [207.0, 51029.0], [206.0, 51009.0], [205.0, 51106.0], [204.0, 51074.0], [203.0, 50949.0], [202.0, 50943.0], [201.0, 50985.0], [200.0, 51213.0], [215.0, 50489.0], [214.0, 50494.0], [213.0, 50638.0], [212.0, 50673.0], [211.0, 50717.0], [210.0, 50667.0], [209.0, 50680.0], [208.0, 50995.0], [223.0, 49874.0], [222.0, 50088.0], [221.0, 50231.0], [220.0, 50260.0], [219.0, 50534.0], [218.0, 50408.0], [217.0, 50593.0], [216.0, 50745.0], [231.0, 49571.0], [230.0, 49618.5], [228.0, 49694.666666666664], [225.0, 49633.0], [224.0, 49842.0], [239.0, 49099.0], [238.0, 49227.0], [237.0, 49512.0], [236.0, 49344.0], [235.0, 49398.0], [234.0, 49626.0], [233.0, 49640.0], [232.0, 49653.0], [247.0, 48510.0], [246.0, 48586.0], [245.0, 48794.0], [244.0, 48717.0], [243.0, 49046.0], [242.0, 48929.0], [241.0, 49044.5], [254.0, 48247.0], [253.0, 48309.0], [252.0, 48505.0], [251.0, 48384.0], [250.0, 48535.5], [248.0, 48490.0], [270.0, 47549.0], [271.0, 47389.0], [269.0, 47804.0], [268.0, 47859.0], [267.0, 47833.0], [266.0, 47899.0], [265.0, 47741.0], [264.0, 47841.0], [262.0, 47970.0], [256.0, 47959.0], [259.0, 47991.0], [258.0, 47932.5], [261.0, 47919.0], [260.0, 48085.0], [286.0, 47171.0], [287.0, 47139.0], [285.0, 47203.0], [284.0, 47187.0], [283.0, 47016.0], [282.0, 47037.0], [281.0, 47135.5], [279.0, 47280.0], [273.0, 47562.0], [272.0, 47567.0], [275.0, 47205.0], [274.0, 47509.0], [278.0, 47412.0], [277.0, 47354.0], [276.0, 47179.0], [302.0, 46278.0], [303.0, 46161.0], [301.0, 46403.0], [300.0, 46557.0], [299.0, 46437.5], [297.0, 46356.0], [296.0, 46490.0], [295.0, 46681.0], [289.0, 47004.0], [288.0, 46994.0], [291.0, 46783.0], [290.0, 46933.0], [294.0, 46696.0], [293.0, 46614.0], [292.0, 46800.0], [318.0, 45471.0], [319.0, 45534.0], [317.0, 45521.0], [316.0, 45598.0], [315.0, 45503.0], [314.0, 45588.0], [313.0, 45592.0], [312.0, 45669.0], [311.0, 45927.0], [305.0, 46269.0], [304.0, 46368.0], [307.0, 46162.0], [306.0, 46068.0], [310.0, 45738.0], [309.0, 46019.0], [308.0, 45976.0], [334.0, 44776.0], [335.0, 44607.0], [333.0, 44897.0], [332.0, 44768.5], [330.0, 44914.0], [329.0, 44883.0], [328.0, 44826.0], [327.0, 44977.0], [322.0, 45526.0], [320.0, 45465.0], [326.0, 45457.0], [325.0, 45468.0], [324.0, 45297.5], [350.0, 42268.0], [351.0, 41924.0], [349.0, 42281.0], [348.0, 33163.0], [347.0, 42840.0], [346.0, 43443.0], [345.0, 43329.0], [344.0, 43424.0], [343.0, 43444.0], [337.0, 44198.0], [336.0, 44423.0], [339.0, 44358.0], [338.0, 44335.0], [342.0, 43682.0], [341.0, 44007.0], [340.0, 44257.0], [366.0, 37988.0], [367.0, 37952.0], [365.0, 38431.0], [364.0, 21435.0], [363.0, 38882.0], [362.0, 39340.0], [361.0, 39514.0], [360.0, 39695.0], [359.0, 39583.0], [353.0, 40894.0], [352.0, 41213.0], [355.0, 40189.0], [354.0, 40256.0], [358.0, 39697.0], [357.0, 39766.0], [356.0, 40134.0], [382.0, 35824.0], [383.0, 35764.0], [381.0, 36028.0], [380.0, 36002.0], [378.0, 36208.0], [377.0, 36432.0], [376.0, 36367.0], [375.0, 36350.0], [369.0, 37653.0], [368.0, 38007.0], [371.0, 37260.0], [370.0, 37292.0], [374.0, 36553.0], [373.0, 36682.0], [372.0, 36895.0], [398.0, 34870.0], [399.0, 34857.0], [397.0, 35144.0], [396.0, 35231.0], [395.0, 35157.0], [394.0, 35484.0], [393.0, 35397.0], [392.0, 35416.0], [391.0, 35390.0], [385.0, 35889.0], [384.0, 35904.0], [387.0, 35690.0], [386.0, 35661.0], [390.0, 35596.0], [389.0, 35555.0], [388.0, 35417.0], [414.0, 27747.0], [415.0, 25027.0], [413.0, 28044.0], [412.0, 28201.0], [411.0, 28853.0], [410.0, 29602.0], [409.0, 29789.0], [408.0, 30800.0], [407.0, 30738.0], [401.0, 33385.0], [400.0, 34363.0], [403.0, 32970.0], [402.0, 33053.0], [406.0, 31423.0], [405.0, 31327.0], [404.0, 31874.0], [422.0, 22525.0], [421.0, 22778.0], [420.0, 23477.0], [419.0, 24303.0], [418.0, 24711.0], [417.0, 24600.0], [416.0, 24599.0], [722.0, 21075.0], [723.0, 21073.69662921349], [758.0, 21107.0], [749.0, 21078.0], [736.0, 21047.366666666665], [827.0, 21083.0], [826.0, 21092.0], [822.0, 21084.0], [819.0, 21082.0], [818.0, 21087.0], [810.0, 21054.85714285714], [806.0, 21104.0], [804.0, 21081.0], [802.0, 21079.0], [861.0, 21140.0], [844.0, 21097.0], [843.0, 21088.0], [839.0, 21088.0], [832.0, 21087.0], [882.0, 21094.0], [878.0, 21092.0], [875.0, 21090.0], [869.0, 21107.0], [920.0, 21096.0], [909.0, 21094.0], [906.0, 21085.0], [897.0, 21097.0], [896.0, 21034.5], [916.0, 21119.0], [956.0, 21046.0], [948.0, 21096.0], [947.0, 21096.0], [945.0, 21050.5], [943.0, 21050.0], [930.0, 21048.5], [929.0, 21051.0], [939.0, 21048.0], [937.0, 21050.0], [934.0, 21051.0], [932.0, 21080.0], [990.0, 21046.0], [991.0, 18689.0], [989.0, 21042.0], [987.0, 21039.0], [986.0, 21077.142857142855], [982.0, 21050.0], [981.0, 21053.0], [977.0, 21056.0], [980.0, 21041.0], [973.0, 21053.0], [970.0, 21075.0], [968.0, 21084.333333333332], [967.0, 21049.0], [985.0, 21045.0], [964.0, 21049.0], [975.0, 21072.0], [1000.0, 3795.0], [999.0, 3907.0], [998.0, 4543.0], [997.0, 4509.0], [996.0, 5178.0], [995.0, 7062.0], [994.0, 12108.0], [993.0, 13207.0], [992.0, 15551.0], [1.0, 99467.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[432.33080424886157, 38772.566009104696]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 323.0], [3.0, 222.0], [4.0, 217.0], [5.0, 326.0], [6.0, 150.0], [7.0, 294.0], [8.0, 219.0], [9.0, 220.0], [10.0, 132.0], [11.0, 224.0], [12.0, 267.0], [13.0, 218.0], [14.0, 351.0], [15.0, 315.0], [16.0, 217.0], [17.0, 242.0], [18.0, 234.0], [19.0, 280.0], [20.0, 212.0], [21.0, 187.0], [22.0, 149.0], [23.0, 220.0], [24.0, 246.0], [25.0, 331.0], [26.0, 252.0], [27.0, 231.0], [28.0, 237.0], [29.0, 236.0], [30.0, 234.0], [31.0, 258.0], [33.0, 249.0], [32.0, 179.0], [35.0, 282.0], [34.0, 248.0], [37.0, 17029.0], [36.0, 232.0], [39.0, 159.0], [38.0, 256.0], [41.0, 233.0], [40.0, 140.0], [43.0, 317.0], [42.0, 334.0], [45.0, 232.0], [44.0, 239.0], [47.0, 238.0], [46.0, 322.0], [49.0, 173.0], [48.0, 242.0], [51.0, 209.0], [50.0, 221.0], [53.0, 269.5], [55.0, 338.0], [54.0, 357.0], [57.0, 226.0], [56.0, 222.0], [59.0, 325.0], [58.0, 220.0], [61.0, 266.0], [60.0, 255.0], [63.0, 223.0], [62.0, 164.0], [67.0, 219.0], [66.0, 328.0], [65.0, 241.0], [64.0, 314.0], [71.0, 137.0], [70.0, 214.0], [69.0, 226.0], [68.0, 246.0], [75.0, 222.0], [74.0, 323.0], [73.0, 219.0], [72.0, 237.0], [79.0, 308.0], [78.0, 180.0], [77.0, 248.0], [76.0, 342.0], [83.0, 214.0], [82.0, 360.0], [81.0, 242.0], [87.0, 210.0], [86.0, 222.0], [85.0, 199.0], [84.0, 239.0], [91.0, 168.0], [90.0, 342.0], [89.0, 280.0], [88.0, 202.0], [94.0, 247.0], [93.0, 8609.5], [99.0, 257.0], [98.0, 344.0], [97.0, 262.0], [96.0, 349.5], [103.0, 326.0], [102.0, 160.0], [101.0, 242.0], [100.0, 350.0], [107.0, 318.0], [106.0, 299.0], [105.0, 235.0], [104.0, 265.0], [111.0, 264.0], [110.0, 313.0], [109.0, 221.0], [108.0, 315.0], [115.0, 241.0], [114.0, 315.0], [113.0, 239.0], [112.0, 326.0], [119.0, 333.0], [118.0, 273.0], [117.0, 214.0], [116.0, 308.0], [123.0, 331.0], [122.0, 187.0], [121.0, 188.0], [120.0, 237.0], [127.0, 296.5], [125.0, 267.0], [124.0, 230.0], [135.0, 225.0], [134.0, 240.0], [133.0, 201.0], [132.0, 199.0], [131.0, 184.0], [130.0, 228.0], [129.0, 175.0], [128.0, 258.0], [143.0, 265.0], [142.0, 335.0], [141.0, 227.0], [140.0, 233.0], [139.0, 294.0], [138.0, 226.0], [137.0, 324.0], [136.0, 231.0], [151.0, 331.0], [150.0, 168.0], [149.0, 262.0], [148.0, 263.0], [147.0, 183.0], [146.0, 241.0], [145.0, 318.0], [144.0, 303.0], [159.0, 240.0], [158.0, 335.0], [157.0, 175.0], [156.0, 228.0], [154.0, 239.0], [153.0, 352.0], [152.0, 265.0], [166.0, 300.0], [164.0, 318.0], [163.0, 323.0], [162.0, 219.0], [161.0, 324.0], [160.0, 328.0], [175.0, 330.0], [174.0, 246.0], [173.0, 318.0], [172.0, 282.0], [170.0, 222.0], [169.0, 278.3333333333333], [183.0, 265.0], [182.0, 321.0], [181.0, 232.0], [180.0, 222.0], [179.0, 232.0], [178.0, 250.0], [177.0, 230.0], [176.0, 197.0], [191.0, 354.0], [190.0, 161.0], [189.0, 296.0], [188.0, 222.0], [187.0, 215.0], [186.0, 316.0], [185.0, 315.0], [184.0, 223.0], [199.0, 317.0], [198.0, 338.0], [197.0, 210.0], [196.0, 166.0], [195.0, 234.33333333333334], [192.0, 186.0], [207.0, 339.0], [206.0, 214.0], [205.0, 296.0], [204.0, 230.0], [203.0, 322.0], [202.0, 241.0], [201.0, 301.0], [200.0, 263.0], [215.0, 186.0], [214.0, 228.0], [213.0, 248.0], [212.0, 173.0], [211.0, 332.0], [210.0, 155.0], [209.0, 212.0], [208.0, 236.0], [223.0, 319.0], [222.0, 325.0], [221.0, 197.0], [220.0, 219.0], [219.0, 173.0], [218.0, 306.0], [217.0, 348.0], [216.0, 265.0], [231.0, 244.0], [230.0, 242.0], [228.0, 247.66666666666666], [225.0, 222.0], [224.0, 266.0], [239.0, 259.0], [238.0, 183.0], [237.0, 354.0], [236.0, 296.0], [235.0, 227.0], [234.0, 261.0], [233.0, 206.0], [232.0, 347.0], [247.0, 222.0], [246.0, 313.0], [245.0, 369.0], [244.0, 164.0], [243.0, 255.0], [242.0, 335.0], [241.0, 278.0], [254.0, 335.0], [253.0, 236.0], [252.0, 233.0], [251.0, 299.0], [250.0, 233.0], [248.0, 338.0], [270.0, 313.0], [271.0, 310.0], [269.0, 264.0], [268.0, 282.0], [267.0, 235.0], [266.0, 221.0], [265.0, 233.0], [264.0, 269.5], [262.0, 282.0], [256.0, 229.5], [259.0, 224.0], [258.0, 197.0], [261.0, 219.0], [260.0, 178.0], [286.0, 264.0], [287.0, 165.0], [285.0, 201.0], [284.0, 318.0], [283.0, 212.0], [282.0, 207.0], [281.0, 314.5], [279.0, 200.0], [273.0, 220.0], [272.0, 237.0], [275.0, 233.0], [274.0, 321.0], [278.0, 263.0], [277.0, 345.0], [276.0, 230.0], [302.0, 335.0], [303.0, 315.0], [301.0, 172.0], [300.0, 262.0], [299.0, 280.0], [297.0, 156.0], [296.0, 318.0], [295.0, 184.0], [289.0, 233.0], [288.0, 217.0], [291.0, 288.0], [290.0, 238.0], [294.0, 171.0], [293.0, 309.0], [292.0, 218.0], [318.0, 201.0], [319.0, 240.0], [317.0, 220.0], [316.0, 209.0], [315.0, 240.0], [314.0, 226.0], [313.0, 230.0], [312.0, 298.0], [311.0, 247.0], [305.0, 301.0], [304.0, 167.0], [307.0, 172.0], [306.0, 362.0], [310.0, 229.0], [309.0, 227.0], [308.0, 212.0], [334.0, 231.0], [335.0, 322.0], [333.0, 320.0], [332.0, 282.5], [330.0, 323.0], [329.0, 335.0], [328.0, 339.0], [327.0, 222.0], [322.0, 217.5], [320.0, 298.0], [326.0, 193.0], [325.0, 161.0], [324.0, 200.5], [350.0, 224.0], [351.0, 174.0], [349.0, 218.0], [348.0, 9202.0], [347.0, 297.0], [346.0, 267.0], [345.0, 333.0], [344.0, 226.0], [343.0, 231.0], [337.0, 368.0], [336.0, 237.0], [339.0, 263.0], [338.0, 199.0], [342.0, 236.0], [341.0, 165.0], [340.0, 311.0], [366.0, 244.0], [367.0, 339.0], [365.0, 345.0], [364.0, 17033.0], [363.0, 335.0], [362.0, 229.0], [361.0, 316.0], [360.0, 331.0], [359.0, 223.0], [353.0, 241.0], [352.0, 325.0], [355.0, 219.0], [354.0, 312.0], [358.0, 305.0], [357.0, 319.0], [356.0, 288.0], [382.0, 220.0], [383.0, 253.0], [381.0, 357.0], [380.0, 283.5], [378.0, 243.0], [377.0, 230.0], [376.0, 224.0], [375.0, 218.0], [369.0, 215.0], [368.0, 188.0], [371.0, 318.0], [370.0, 226.0], [374.0, 320.0], [373.0, 266.0], [372.0, 264.0], [398.0, 239.0], [399.0, 300.0], [397.0, 165.0], [396.0, 164.0], [395.0, 278.0], [394.0, 160.0], [393.0, 282.0], [392.0, 316.0], [391.0, 316.0], [385.0, 260.0], [384.0, 227.0], [387.0, 211.0], [386.0, 212.0], [390.0, 255.0], [389.0, 230.0], [388.0, 170.0], [414.0, 253.0], [415.0, 340.0], [413.0, 239.0], [412.0, 162.0], [411.0, 330.0], [410.0, 354.0], [409.0, 319.0], [408.0, 177.0], [407.0, 335.0], [401.0, 307.0], [400.0, 182.0], [403.0, 214.0], [402.0, 337.0], [406.0, 205.0], [405.0, 340.0], [404.0, 240.0], [422.0, 215.0], [421.0, 277.0], [420.0, 304.0], [419.0, 172.0], [418.0, 220.0], [417.0, 247.0], [416.0, 310.0], [722.0, 186.0], [723.0, 187.6292134831461], [758.0, 154.0], [749.0, 158.0], [736.0, 180.46666666666664], [827.0, 169.0], [826.0, 171.0], [822.0, 158.0], [819.0, 229.0], [818.0, 185.0], [810.0, 179.49999999999997], [806.0, 315.0], [804.0, 345.0], [802.0, 227.0], [861.0, 184.0], [844.0, 352.0], [843.0, 318.0], [839.0, 256.0], [832.0, 248.0], [882.0, 334.0], [878.0, 304.0], [875.0, 335.0], [869.0, 195.5], [920.0, 358.0], [909.0, 221.0], [906.0, 221.0], [897.0, 245.0], [896.0, 180.0], [916.0, 154.0], [956.0, 158.0], [948.0, 244.0], [947.0, 348.0], [945.0, 153.5], [943.0, 156.0], [930.0, 146.0], [929.0, 153.0], [939.0, 148.5], [937.0, 151.0], [934.0, 177.0], [932.0, 154.0], [990.0, 213.2], [991.0, 241.0], [989.0, 141.0], [987.0, 233.0], [986.0, 186.2142857142857], [982.0, 150.0], [981.0, 150.0], [977.0, 157.0], [980.0, 136.0], [973.0, 157.0], [975.0, 150.0], [967.0, 170.0], [985.0, 225.0], [964.0, 151.0], [970.0, 187.0], [968.0, 212.33333333333334], [1000.0, 204.0], [999.0, 202.0], [998.0, 215.0], [997.0, 227.0], [996.0, 225.0], [995.0, 181.0], [994.0, 247.0], [993.0, 230.0], [992.0, 210.0], [1.0, 226.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[432.33080424886157, 322.40971168437]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 74662.0], [3.0, 74425.0], [4.0, 70779.0], [5.0, 70744.0], [6.0, 67666.0], [7.0, 67635.0], [8.0, 66845.0], [9.0, 66390.0], [10.0, 66016.0], [11.0, 65893.0], [12.0, 65443.0], [13.0, 64846.0], [14.0, 64444.0], [15.0, 64413.0], [16.0, 63660.0], [17.0, 63127.0], [18.0, 62972.0], [19.0, 63166.0], [20.0, 62457.0], [21.0, 62338.0], [22.0, 61816.0], [23.0, 61815.0], [24.0, 61749.0], [25.0, 61463.0], [26.0, 61036.0], [27.0, 60578.0], [28.0, 60487.0], [29.0, 60103.0], [30.0, 60000.0], [31.0, 59863.0], [33.0, 59144.0], [32.0, 59477.0], [35.0, 59190.0], [34.0, 59230.0], [37.0, 58438.0], [36.0, 58975.0], [39.0, 58337.0], [38.0, 58526.0], [41.0, 58089.0], [40.0, 57914.0], [43.0, 58239.0], [42.0, 58268.0], [45.0, 58023.0], [44.0, 58073.0], [47.0, 57959.0], [46.0, 58142.0], [49.0, 57862.0], [48.0, 57848.0], [51.0, 57696.0], [50.0, 57825.0], [53.0, 57752.5], [55.0, 57734.0], [54.0, 57789.0], [57.0, 57504.0], [56.0, 57540.0], [59.0, 57719.0], [58.0, 57623.0], [61.0, 57666.0], [60.0, 57599.0], [63.0, 57397.0], [62.0, 57287.0], [67.0, 57346.0], [66.0, 57512.0], [65.0, 57394.0], [64.0, 57566.0], [71.0, 56830.0], [70.0, 57041.0], [69.0, 57159.0], [68.0, 57110.0], [75.0, 56995.0], [74.0, 57159.0], [73.0, 56949.0], [72.0, 57103.0], [79.0, 56618.0], [78.0, 56757.0], [77.0, 56930.0], [76.0, 56984.0], [83.0, 56251.0], [82.0, 56552.0], [81.0, 56508.5], [87.0, 54747.0], [86.0, 55012.0], [85.0, 55066.0], [84.0, 55900.0], [91.0, 54557.0], [90.0, 54683.0], [89.0, 54785.0], [88.0, 54712.0], [94.0, 54533.0], [93.0, 54279.5], [99.0, 54101.0], [98.0, 54283.0], [97.0, 54291.0], [96.0, 54487.5], [103.0, 54081.0], [102.0, 54002.0], [101.0, 54059.0], [100.0, 54163.0], [107.0, 53975.0], [106.0, 53939.0], [105.0, 53841.0], [104.0, 54079.0], [111.0, 53755.0], [110.0, 53850.0], [109.0, 53750.0], [108.0, 53966.0], [115.0, 53515.0], [114.0, 53630.0], [113.0, 53514.0], [112.0, 53791.0], [119.0, 53513.0], [118.0, 53465.0], [117.0, 53387.0], [116.0, 53541.0], [123.0, 53395.0], [122.0, 53349.0], [121.0, 53404.0], [120.0, 53381.0], [127.0, 53264.0], [125.0, 53375.0], [124.0, 53289.0], [135.0, 53074.0], [134.0, 53103.0], [133.0, 53104.0], [132.0, 53147.0], [131.0, 53197.0], [130.0, 53163.0], [129.0, 53239.0], [128.0, 53165.0], [143.0, 52420.0], [142.0, 52442.0], [141.0, 52403.0], [140.0, 52648.0], [139.0, 52986.0], [138.0, 52966.0], [137.0, 53112.0], [136.0, 52942.0], [151.0, 52314.0], [150.0, 52237.0], [149.0, 52337.0], [148.0, 52340.0], [147.0, 52273.0], [146.0, 52262.0], [145.0, 52367.0], [144.0, 52357.0], [159.0, 51923.0], [158.0, 52163.0], [157.0, 52102.0], [156.0, 52005.0], [154.0, 52136.0], [153.0, 52289.0], [152.0, 52319.0], [166.0, 52010.0], [164.0, 52013.0], [163.0, 52081.0], [162.0, 52041.0], [161.0, 52123.0], [160.0, 52150.0], [175.0, 51891.0], [174.0, 51926.0], [173.0, 51902.0], [172.0, 51906.5], [170.0, 51903.0], [169.0, 51951.666666666664], [183.0, 51746.0], [182.0, 51755.0], [181.0, 51559.0], [180.0, 51695.0], [179.0, 51699.0], [178.0, 51651.0], [177.0, 51784.0], [176.0, 51819.0], [191.0, 51517.0], [190.0, 51437.0], [189.0, 51555.0], [188.0, 51427.0], [187.0, 51430.0], [186.0, 51645.0], [185.0, 51737.0], [184.0, 51525.0], [199.0, 51467.0], [198.0, 51488.0], [197.0, 51262.0], [196.0, 51408.0], [195.0, 51383.0], [192.0, 51437.0], [207.0, 51368.0], [206.0, 51326.0], [205.0, 51403.0], [204.0, 51305.0], [203.0, 51448.0], [202.0, 51270.0], [201.0, 51412.0], [200.0, 51485.0], [215.0, 50715.0], [214.0, 50885.0], [213.0, 51043.0], [212.0, 50899.0], [211.0, 51205.0], [210.0, 50896.0], [209.0, 50991.0], [208.0, 51258.0], [223.0, 50195.0], [222.0, 50414.0], [221.0, 50429.0], [220.0, 50479.0], [219.0, 50718.0], [218.0, 50933.0], [217.0, 50982.0], [216.0, 51026.0], [231.0, 49858.0], [230.0, 49924.0], [228.0, 49953.0], [225.0, 49955.0], [224.0, 50122.0], [239.0, 49492.0], [238.0, 49661.0], [237.0, 49866.0], [236.0, 49864.0], [235.0, 49672.0], [234.0, 49900.0], [233.0, 49846.0], [232.0, 50001.0], [247.0, 48886.0], [246.0, 49054.0], [245.0, 49184.0], [244.0, 48884.0], [243.0, 49312.0], [242.0, 49327.0], [241.0, 49404.0], [254.0, 48646.0], [253.0, 48657.0], [252.0, 48769.0], [251.0, 48868.0], [250.0, 48770.5], [248.0, 49020.0], [270.0, 47968.0], [271.0, 47916.0], [269.0, 48076.0], [268.0, 48142.0], [267.0, 48171.0], [266.0, 48121.0], [265.0, 48061.0], [264.0, 48191.5], [262.0, 48253.0], [256.0, 48261.0], [259.0, 48216.0], [258.0, 48160.5], [261.0, 48220.0], [260.0, 48263.0], [286.0, 47448.0], [287.0, 47307.0], [285.0, 47404.0], [284.0, 47515.0], [283.0, 47436.0], [282.0, 47398.0], [281.0, 47594.0], [279.0, 47481.0], [273.0, 47783.0], [272.0, 47805.0], [275.0, 47649.0], [274.0, 47831.0], [278.0, 47677.0], [277.0, 47700.0], [276.0, 47544.0], [302.0, 46644.0], [303.0, 46640.0], [301.0, 46583.0], [300.0, 46829.0], [299.0, 46748.5], [297.0, 46540.0], [296.0, 46949.0], [295.0, 46869.0], [289.0, 47269.0], [288.0, 47258.0], [291.0, 47314.0], [290.0, 47256.0], [294.0, 46870.0], [293.0, 46975.0], [292.0, 47023.0], [318.0, 45780.0], [319.0, 45774.0], [317.0, 45772.0], [316.0, 45813.0], [315.0, 45914.0], [314.0, 45916.0], [313.0, 45937.0], [312.0, 46156.0], [311.0, 46222.0], [305.0, 46570.0], [304.0, 46536.0], [307.0, 46337.0], [306.0, 46549.0], [310.0, 46102.0], [309.0, 46258.0], [308.0, 46188.0], [334.0, 45008.0], [335.0, 45110.0], [333.0, 45228.0], [332.0, 45103.0], [330.0, 45238.0], [329.0, 45245.0], [328.0, 45332.0], [327.0, 45333.0], [322.0, 45753.5], [320.0, 45772.0], [326.0, 45653.0], [325.0, 45633.0], [324.0, 45498.5], [350.0, 42596.0], [351.0, 42107.0], [349.0, 42678.0], [348.0, 42366.0], [347.0, 43304.0], [346.0, 43723.0], [345.0, 43731.0], [344.0, 43678.0], [343.0, 43843.0], [337.0, 44705.0], [336.0, 44760.0], [339.0, 44632.0], [338.0, 44582.0], [342.0, 43973.0], [341.0, 44186.0], [340.0, 44569.0], [366.0, 38478.0], [367.0, 38324.0], [365.0, 38951.0], [364.0, 38468.0], [363.0, 39218.0], [362.0, 39570.0], [361.0, 39832.0], [360.0, 40058.0], [359.0, 39970.0], [353.0, 41281.0], [352.0, 41539.0], [355.0, 40520.0], [354.0, 40681.0], [358.0, 40210.0], [357.0, 40272.0], [356.0, 40578.0], [382.0, 36216.0], [383.0, 36155.0], [381.0, 36396.0], [380.0, 36386.5], [378.0, 36675.0], [377.0, 36665.0], [376.0, 36737.0], [375.0, 36739.0], [369.0, 37990.0], [368.0, 38196.0], [371.0, 37630.0], [370.0, 37518.0], [374.0, 36905.0], [373.0, 36949.0], [372.0, 37163.0], [398.0, 35127.0], [399.0, 35158.0], [397.0, 35323.0], [396.0, 35396.0], [395.0, 35665.0], [394.0, 35644.0], [393.0, 35700.0], [392.0, 35816.0], [391.0, 35841.0], [385.0, 36150.0], [384.0, 36135.0], [387.0, 35902.0], [386.0, 35984.0], [390.0, 35865.0], [389.0, 35785.0], [388.0, 35671.0], [414.0, 28005.0], [415.0, 25536.0], [413.0, 28283.0], [412.0, 28375.0], [411.0, 29183.0], [410.0, 29957.0], [409.0, 30109.0], [408.0, 30986.0], [407.0, 31078.0], [401.0, 33819.0], [400.0, 34557.0], [403.0, 33195.0], [402.0, 33390.0], [406.0, 31678.0], [405.0, 31846.0], [404.0, 32114.0], [422.0, 22747.0], [421.0, 23237.0], [420.0, 23985.0], [419.0, 24478.0], [418.0, 24932.0], [417.0, 24990.0], [416.0, 25115.0], [515.0, 21048.625], [670.0, 21048.0], [669.0, 21043.0], [666.0, 21037.0], [665.0, 21041.0], [664.0, 21045.0], [662.0, 21044.0], [722.0, 21113.0], [723.0, 21196.053921568633], [724.0, 21166.0], [734.0, 21062.0], [751.0, 21065.0], [758.0, 21401.0], [749.0, 21260.0], [745.0, 21075.0], [744.0, 21078.0], [743.0, 21077.0], [764.0, 21108.0], [737.0, 21077.0], [736.0, 21126.61764705883], [799.0, 21146.0], [792.0, 21071.0], [818.0, 21398.0], [830.0, 21081.0], [827.0, 21195.0], [826.0, 21386.0], [807.0, 21046.0], [806.0, 21386.0], [804.0, 21706.0], [802.0, 21452.0], [810.0, 21102.178571428576], [809.0, 21051.0], [823.0, 21086.0], [822.0, 21296.0], [819.0, 21479.0], [817.0, 21094.0], [816.0, 21137.0], [860.0, 21082.0], [861.0, 21452.0], [857.0, 21090.5], [839.0, 21354.5], [836.0, 21090.0], [833.0, 21080.0], [832.0, 21610.0], [854.0, 21086.0], [853.0, 21097.0], [848.0, 21089.5], [845.0, 21135.0], [844.0, 21712.0], [843.0, 21305.666666666668], [881.0, 21095.0], [891.0, 21030.0], [887.0, 21039.0], [885.0, 21038.0], [882.0, 21411.0], [878.0, 21373.5], [875.0, 21733.0], [870.0, 21084.0], [869.0, 21484.0], [866.0, 21090.0], [864.0, 21100.0], [926.0, 21097.0], [920.0, 21730.0], [903.0, 21084.0], [901.0, 21088.0], [899.0, 21091.0], [897.0, 21498.0], [896.0, 21100.571428571428], [918.0, 21098.0], [916.0, 21437.0], [915.0, 21099.0], [914.0, 21096.0], [911.0, 21090.5], [909.0, 21637.0], [907.0, 21093.0], [906.0, 21494.0], [934.0, 21228.0], [956.0, 21125.5], [954.0, 21067.0], [932.0, 21235.0], [930.0, 21194.5], [929.0, 21162.5], [948.0, 21354.5], [947.0, 21715.0], [945.0, 21151.333333333332], [943.0, 21206.0], [942.0, 21046.0], [939.0, 21197.0], [937.0, 21201.0], [977.0, 21091.75], [991.0, 19112.0], [990.0, 21283.285714285714], [989.0, 21185.0], [988.0, 21045.0], [986.0, 21186.388888888887], [985.0, 21438.0], [987.0, 21413.0], [967.0, 21262.0], [964.0, 21201.0], [975.0, 21222.0], [973.0, 21210.0], [970.0, 21396.5], [968.0, 21342.2], [982.0, 21200.0], [981.0, 21204.0], [980.0, 21192.0], [976.0, 21060.5], [1000.0, 4075.0], [999.0, 4235.0], [998.0, 4817.0], [997.0, 4977.0], [996.0, 5432.0], [995.0, 7244.0], [994.0, 12387.0], [993.0, 13638.0], [992.0, 15858.0], [1.0, 99694.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[556.8800000000001, 32995.31099999998]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 58.38333333333333, "minX": 1.70280918E12, "maxY": 1118219.6333333333, "series": [{"data": [[1.70280924E12, 1118219.6333333333], [1.70280918E12, 8949.05], [1.7028093E12, 23485.083333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70280924E12, 2791.1], [1.70280918E12, 1244.8833333333334], [1.7028093E12, 58.38333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7028093E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 232.32213740458022, "minX": 1.70280918E12, "maxY": 70849.07692307692, "series": [{"data": [[1.70280924E12, 38239.03881987579], [1.70280918E12, 3851.0], [1.7028093E12, 70575.23076923078]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70280924E12, 15074.25], [1.70280918E12, 232.32213740458022]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70280924E12, 32554.277157360404], [1.70280918E12, 4155.0], [1.7028093E12, 70849.07692307692]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7028093E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 203.0, "minX": 1.70280918E12, "maxY": 38974.61538461539, "series": [{"data": [[1.70280924E12, 19072.397515527977], [1.70280918E12, 3573.0], [1.7028093E12, 38974.61538461539]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70280924E12, 15074.25], [1.70280918E12, 232.19541984732817]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70280924E12, 212.1248730964468], [1.70280918E12, 203.0], [1.7028093E12, 233.53846153846152]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7028093E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 81.0, "minX": 1.70280918E12, "maxY": 14061.5, "series": [{"data": [[1.70280924E12, 13822.256211180129], [1.70280918E12, 2481.5], [1.7028093E12, 3142.6153846153848]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70280924E12, 14061.5], [1.70280918E12, 111.66564885496184]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70280924E12, 7423.111675126905], [1.70280918E12, 81.0], [1.7028093E12, 101.53846153846153]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7028093E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 127.0, "minX": 1.70280918E12, "maxY": 74425.0, "series": [{"data": [[1.70280924E12, 64444.0], [1.70280918E12, 4235.0], [1.7028093E12, 74425.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70280924E12, 57514.8], [1.70280918E12, 328.0], [1.7028093E12, 74111.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70280924E12, 63066.55], [1.70280918E12, 364.39999999999986], [1.7028093E12, 74425.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70280924E12, 58983.44999999999], [1.70280918E12, 340.0], [1.7028093E12, 74425.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.70280924E12, 4509.0], [1.70280918E12, 127.0], [1.7028093E12, 64445.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70280924E12, 50040.5], [1.70280918E12, 226.0], [1.7028093E12, 66280.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7028093E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 226.0, "minX": 1.0, "maxY": 99580.5, "series": [{"data": [[2.0, 18900.5], [8.0, 37998.5], [32.0, 49887.0], [34.0, 49050.0], [36.0, 45241.5], [655.0, 226.0], [10.0, 43376.5], [42.0, 48054.0], [12.0, 39519.5], [3.0, 17033.0], [50.0, 47221.0], [54.0, 57215.0], [14.0, 44227.5], [62.0, 53164.0], [4.0, 41053.5], [1.0, 9202.0], [72.0, 51993.5], [86.0, 51227.0], [22.0, 35406.5], [6.0, 42274.5], [26.0, 47079.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 70761.5], [2.0, 99580.5], [795.0, 21083.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 795.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 49708.0, "series": [{"data": [[2.0, 2360.0], [8.0, 2645.5], [32.0, 3572.5], [34.0, 6098.0], [36.0, 5717.5], [655.0, 226.0], [10.0, 16997.0], [42.0, 8628.0], [12.0, 11909.0], [3.0, 17033.0], [50.0, 3301.0], [54.0, 3409.0], [14.0, 8036.0], [62.0, 7017.0], [4.0, 1917.5], [1.0, 9202.0], [72.0, 6307.5], [86.0, 8206.5], [22.0, 3554.0], [6.0, 2164.0], [26.0, 3778.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 35252.5], [2.0, 49708.0], [795.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 795.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.70280918E12, "maxY": 38.56666666666667, "series": [{"data": [[1.70280924E12, 0.06666666666666667], [1.70280918E12, 38.56666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70280924E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.70280918E12, "maxY": 13.9, "series": [{"data": [[1.70280924E12, 13.9], [1.70280918E12, 0.06666666666666667], [1.7028093E12, 0.3]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70280924E12, 0.06666666666666667], [1.70280918E12, 10.916666666666666]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.70280924E12, 13.25]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.7028093E12, 0.13333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.TruncatedChunkException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7028093E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.70280918E12, "maxY": 10.916666666666666, "series": [{"data": [[1.70280924E12, 6.95], [1.70280918E12, 0.03333333333333333], [1.7028093E12, 0.15]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.70280924E12, 9.466666666666667], [1.7028093E12, 0.06666666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.70280924E12, 0.06666666666666667], [1.70280918E12, 10.916666666666666]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.70280924E12, 3.783333333333333], [1.7028093E12, 0.06666666666666667]], "isOverall": false, "label": "HTTP Request-1-failure", "isController": false}, {"data": [[1.70280924E12, 6.95], [1.70280918E12, 0.03333333333333333], [1.7028093E12, 0.15]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7028093E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.70280918E12, "maxY": 13.966666666666667, "series": [{"data": [[1.70280924E12, 13.966666666666667], [1.70280918E12, 10.983333333333333], [1.7028093E12, 0.3]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70280924E12, 13.25], [1.7028093E12, 0.13333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7028093E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

